<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en"><head>
<meta http-equiv="content-type" content="text/html; charset=windows-1252">
<!-- Generated by javadoc (version 1.6.0_18) on Fri Sep 26 17:01:28 PDT 2014 -->
<title>Formatter (Java Platform SE 7 )</title>
<meta name="date" content="2014-09-26">
<meta name="keywords" content="java.util.Formatter class">
<meta name="keywords" content="locale()">
<meta name="keywords" content="out()">
<meta name="keywords" content="toString()">
<meta name="keywords" content="flush()">
<meta name="keywords" content="close()">
<meta name="keywords" content="ioException()">
<meta name="keywords" content="format()">
<link rel="stylesheet" type="text/css" href="Formatter%20%28Java%20Platform%20SE%207%20%29_files/stylesheet.css" title="Style">
</head>
<body>
<script type="text/javascript"><!--
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="Formatter (Java Platform SE 7 )";
    }
//-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar_top">
<!--   -->
</a><a href="#skip-navbar_top" title="Skip navigation links"></a><a name="navbar_top_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="http://docs.oracle.com/javase/7/docs/api/overview-summary.html">Overview</a></li>
<li><a href="http://docs.oracle.com/javase/7/docs/api/java/util/package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="http://docs.oracle.com/javase/7/docs/api/java/util/class-use/Formatter.html">Use</a></li>
<li><a href="http://docs.oracle.com/javase/7/docs/api/java/util/package-tree.html">Tree</a></li>
<li><a href="http://docs.oracle.com/javase/7/docs/api/deprecated-list.html">Deprecated</a></li>
<li><a href="http://docs.oracle.com/javase/7/docs/api/index-files/index-1.html">Index</a></li>
<li><a href="http://docs.oracle.com/javase/7/docs/api/help-doc.html">Help</a></li>
</ul>
<div class="aboutLanguage"><em><strong>Java™&nbsp;Platform<br>Standard&nbsp;Ed.&nbsp;7</strong></em></div>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="http://docs.oracle.com/javase/7/docs/api/java/util/FormattableFlags.html" title="class in java.util"><span class="strong">Prev Class</span></a></li>
<li><a href="http://docs.oracle.com/javase/7/docs/api/java/util/Formatter.BigDecimalLayoutForm.html" title="enum in java.util"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="http://docs.oracle.com/javase/7/docs/api/index.html?java/util/Formatter.html" target="_top">Frames</a></li>
<li><a href="http://docs.oracle.com/javase/7/docs/api/java/util/Formatter.html" target="_top">No Frames</a></li>
</ul>
<ul style="display: block;" class="navList" id="allclasses_navbar_top">
<li><a href="http://docs.oracle.com/javase/7/docs/api/allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li><a href="#nested_class_summary">Nested</a>&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">java.util</div>
<h2 title="Class Formatter" class="title">Class Formatter</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li><a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html" title="class in java.lang">java.lang.Object</a></li>
<li>
<ul class="inheritance">
<li>java.util.Formatter</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>All Implemented Interfaces:</dt>
<dd><a href="http://docs.oracle.com/javase/7/docs/api/java/io/Closeable.html" title="interface in java.io">Closeable</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/io/Flushable.html" title="interface in java.io">Flushable</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/AutoCloseable.html" title="interface in java.lang">AutoCloseable</a></dd>
</dl>
<hr>
<br>
<pre>public final class <span class="strong">Formatter</span>
extends <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html" title="class in java.lang">Object</a>
implements <a href="http://docs.oracle.com/javase/7/docs/api/java/io/Closeable.html" title="interface in java.io">Closeable</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/io/Flushable.html" title="interface in java.io">Flushable</a></pre>
<div class="block">An interpreter for printf-style format strings.  This class provides support
 for layout justification and alignment, common formats for numeric, string,
 and date/time data, and locale-specific output.  Common Java types such as
 <code>byte</code>, <a href="http://docs.oracle.com/javase/7/docs/api/java/math/BigDecimal.html" title="class in java.math"><code>BigDecimal</code></a>, and <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Calendar.html" title="class in java.util"><code>Calendar</code></a>
 are supported.  Limited formatting customization for arbitrary user types is
 provided through the <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Formattable.html" title="interface in java.util"><code>Formattable</code></a> interface.

 <p> Formatters are not necessarily safe for multithreaded access.  Thread
 safety is optional and is the responsibility of users of methods in this
 class.

 </p><p> Formatted printing for the Java language is heavily inspired by C's
 <code>printf</code>.  Although the format strings are similar to C, some
 customizations have been made to accommodate the Java language and exploit
 some of its features.  Also, Java formatting is more strict than C's; for
 example, if a conversion is incompatible with a flag, an exception will be
 thrown.  In C inapplicable flags are silently ignored.  The format strings
 are thus intended to be recognizable to C programmers but not necessarily
 completely compatible with those in C.

 </p><p> Examples of expected usage:

 </p><blockquote><pre>   StringBuilder sb = new StringBuilder();
   // Send all output to the Appendable object sb
   Formatter formatter = new Formatter(sb, Locale.US);

   // Explicit argument indices may be used to re-order output.
   formatter.format("%4$2s %3$2s %2$2s %1$2s", "a", "b", "c", "d")
   // -&gt; " d  c  b  a"

   // Optional locale as the first argument can be used to get
   // locale-specific formatting of numbers.  The precision and width can be
   // given to round and align the value.
   formatter.format(Locale.FRANCE, "e = %+10.4f", Math.E);
   // -&gt; "e =    +2,7183"

   // The '(' numeric flag may be used to format negative numbers with
   // parentheses rather than a minus sign.  Group separators are
   // automatically inserted.
   formatter.format("Amount gained or lost since last statement: $ %(,.2f",
                    balanceDelta);
   // -&gt; "Amount gained or lost since last statement: $ (6,217.58)"
 </pre></blockquote>

 <p> Convenience methods for common formatting requests exist as illustrated
 by the following invocations:

 </p><blockquote><pre>   // Writes a formatted string to System.out.
   System.out.format("Local time: %tT", Calendar.getInstance());
   // -&gt; "Local time: 13:34:18"

   // Writes formatted output to System.err.
   System.err.printf("Unable to open file '%1$s': %2$s",
                     fileName, exception.getMessage());
   // -&gt; "Unable to open file 'food': No such file or directory"
 </pre></blockquote>

 <p> Like C's <code>sprintf(3)</code>, Strings may be formatted using the static
 method <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html#format%28java.lang.String,%20java.lang.Object...%29"><code>String.format</code></a>:

 </p><blockquote><pre>   // Format a string containing a date.
   import java.util.Calendar;
   import java.util.GregorianCalendar;
   import static java.util.Calendar.*;

   Calendar c = new GregorianCalendar(1995, MAY, 23);
   String s = String.format("Duke's Birthday: %1$tm %1$te,%1$tY", c);
   // -&gt; s == "Duke's Birthday: May 23, 1995"
 </pre></blockquote>

 <h3><a name="org">Organization</a></h3>

 <p> This specification is divided into two sections.  The first section, <a href="#summary">Summary</a>, covers the basic formatting concepts.  This
 section is intended for users who want to get started quickly and are
 familiar with formatted printing in other programming languages.  The second
 section, <a href="#detail">Details</a>, covers the specific implementation
 details.  It is intended for users who want more precise specification of
 formatting behavior.

 </p><h3><a name="summary">Summary</a></h3>

 <p> This section is intended to provide a brief overview of formatting
 concepts.  For precise behavioral details, refer to the <a href="#detail">Details</a> section.

 </p><h4><a name="syntax">Format String Syntax</a></h4>

 <p> Every method which produces formatted output requires a <i>format
 string</i> and an <i>argument list</i>.  The format string is a <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class in java.lang"><code>String</code></a> which may contain fixed text and one or more embedded <i>format
 specifiers</i>.  Consider the following example:

 </p><blockquote><pre>   Calendar c = ...;
   String s = String.format("Duke's Birthday: %1$tm %1$te,%1$tY", c);
 </pre></blockquote>

 This format string is the first argument to the <code>format</code> method.  It
 contains three format specifiers "<code>%1$tm</code>", "<code>%1$te</code>", and
 "<code>%1$tY</code>" which indicate how the arguments should be processed and
 where they should be inserted in the text.  The remaining portions of the
 format string are fixed text including <code>"Dukes Birthday: "</code> and any
 other spaces or punctuation.

 The argument list consists of all arguments passed to the method after the
 format string.  In the above example, the argument list is of size one and
 consists of the <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Calendar.html" title="class in java.util"><code>Calendar</code></a> object <code>c</code>.

 <ul>

 <li> The format specifiers for general, character, and numeric types have
 the following syntax:

 <blockquote><pre>   %[argument_index$][flags][width][.precision]conversion
 </pre></blockquote>

 <p> The optional <i>argument_index</i> is a decimal integer indicating the
 position of the argument in the argument list.  The first argument is
 referenced by "<code>1$</code>", the second by "<code>2$</code>", etc.

 </p><p> The optional <i>flags</i> is a set of characters that modify the output
 format.  The set of valid flags depends on the conversion.

 </p><p> The optional <i>width</i> is a non-negative decimal integer indicating
 the minimum number of characters to be written to the output.

 </p><p> The optional <i>precision</i> is a non-negative decimal integer usually
 used to restrict the number of characters.  The specific behavior depends on
 the conversion.

 </p><p> The required <i>conversion</i> is a character indicating how the
 argument should be formatted.  The set of valid conversions for a given
 argument depends on the argument's data type.

 </p></li><li> The format specifiers for types which are used to represents dates and
 times have the following syntax:

 <blockquote><pre>   %[argument_index$][flags][width]conversion
 </pre></blockquote>

 <p> The optional <i>argument_index</i>, <i>flags</i> and <i>width</i> are
 defined as above.

 </p><p> The required <i>conversion</i> is a two character sequence.  The first
 character is <code>'t'</code> or <code>'T'</code>.  The second character indicates
 the format to be used.  These characters are similar to but not completely
 identical to those defined by GNU <code>date</code> and POSIX
 <code>strftime(3c)</code>.

 </p></li><li> The format specifiers which do not correspond to arguments have the
 following syntax:

 <blockquote><pre>   %[flags][width]conversion
 </pre></blockquote>

 <p> The optional <i>flags</i> and <i>width</i> is defined as above.

 </p><p> The required <i>conversion</i> is a character indicating content to be
 inserted in the output.

 </p></li></ul>

 <h4> Conversions </h4>

 <p> Conversions are divided into the following categories:

 </p><ol>

 <li> <b>General</b> - may be applied to any argument
 type

 </li><li> <b>Character</b> - may be applied to basic types which represent
 Unicode characters: <code>char</code>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Character.html" title="class in java.lang"><code>Character</code></a>, <code>byte</code>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Byte.html" title="class in java.lang"><code>Byte</code></a>, <code>short</code>, and <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Short.html" title="class in java.lang"><code>Short</code></a>. This conversion may also be
 applied to the types <code>int</code> and <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Integer.html" title="class in java.lang"><code>Integer</code></a> when <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Character.html#isValidCodePoint%28int%29"><code>Character.isValidCodePoint(int)</code></a> returns <code>true</code>

 </li><li> <b>Numeric</b>

 <ol>

 <li> <b>Integral</b> - may be applied to Java integral types: <code>byte</code>,
 <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Byte.html" title="class in java.lang"><code>Byte</code></a>, <code>short</code>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Short.html" title="class in java.lang"><code>Short</code></a>, <code>int</code> and <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Integer.html" title="class in java.lang"><code>Integer</code></a>, <code>long</code>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Long.html" title="class in java.lang"><code>Long</code></a>, and <a href="http://docs.oracle.com/javase/7/docs/api/java/math/BigInteger.html" title="class in java.math"><code>BigInteger</code></a>

 </li><li><b>Floating Point</b> - may be applied to Java floating-point types:
 <code>float</code>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Float.html" title="class in java.lang"><code>Float</code></a>, <code>double</code>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Double.html" title="class in java.lang"><code>Double</code></a>, and <a href="http://docs.oracle.com/javase/7/docs/api/java/math/BigDecimal.html" title="class in java.math"><code>BigDecimal</code></a>

 </li></ol>

 </li><li> <b>Date/Time</b> - may be applied to Java types which are capable of
 encoding a date or time: <code>long</code>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Long.html" title="class in java.lang"><code>Long</code></a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Calendar.html" title="class in java.util"><code>Calendar</code></a>, and
 <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Date.html" title="class in java.util"><code>Date</code></a>.

 </li><li> <b>Percent</b> - produces a literal <code>'%'</code>
 (<tt>'\u0025'</tt>)

 </li><li> <b>Line Separator</b> - produces the platform-specific line separator

 </li></ol>

 <p> The following table summarizes the supported conversions.  Conversions
 denoted by an upper-case character (i.e. <code>'B'</code>, <code>'H'</code>,
 <code>'S'</code>, <code>'C'</code>, <code>'X'</code>, <code>'E'</code>, <code>'G'</code>,
 <code>'A'</code>, and <code>'T'</code>) are the same as those for the corresponding
 lower-case conversion characters except that the result is converted to
 upper case according to the rules of the prevailing <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Locale.html" title="class in java.util"><code>Locale</code></a>.  The result is equivalent to the following invocation of <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html#toUpperCase%28%29"><code>String.toUpperCase()</code></a>

 </p><pre>    out.toUpperCase() </pre>

 <table summary="genConv" cellpadding="5">

 <tbody><tr><th valign="bottom"> Conversion
     </th><th valign="bottom"> Argument Category
     </th><th valign="bottom"> Description

 </th></tr><tr><td valign="top"> <code>'b'</code>, <code>'B'</code>
     </td><td valign="top"> general
     </td><td> If the argument <i>arg</i> is <code>null</code>, then the result is
     "<code>false</code>".  If <i>arg</i> is a <code>boolean</code> or <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Boolean.html" title="class in java.lang"><code>Boolean</code></a>, then the result is the string returned by <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html#valueOf%28boolean%29"><code>String.valueOf(arg)</code></a>.  Otherwise, the result is
     "true".

 </td></tr><tr><td valign="top"> <code>'h'</code>, <code>'H'</code>
     </td><td valign="top"> general
     </td><td> If the argument <i>arg</i> is <code>null</code>, then the result is
     "<code>null</code>".  Otherwise, the result is obtained by invoking
     <code>Integer.toHexString(arg.hashCode())</code>.

 </td></tr><tr><td valign="top"> <code>'s'</code>, <code>'S'</code>
     </td><td valign="top"> general
     </td><td> If the argument <i>arg</i> is <code>null</code>, then the result is
     "<code>null</code>".  If <i>arg</i> implements <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Formattable.html" title="interface in java.util"><code>Formattable</code></a>, then
     <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Formattable.html#formatTo%28java.util.Formatter,%20int,%20int,%20int%29"><code>arg.formatTo</code></a> is invoked. Otherwise, the
     result is obtained by invoking <code>arg.toString()</code>.

 </td></tr><tr><td valign="top"><code>'c'</code>, <code>'C'</code>
     </td><td valign="top"> character
     </td><td> The result is a Unicode character

 </td></tr><tr><td valign="top"><code>'d'</code>
     </td><td valign="top"> integral
     </td><td> The result is formatted as a decimal integer

 </td></tr><tr><td valign="top"><code>'o'</code>
     </td><td valign="top"> integral
     </td><td> The result is formatted as an octal integer

 </td></tr><tr><td valign="top"><code>'x'</code>, <code>'X'</code>
     </td><td valign="top"> integral
     </td><td> The result is formatted as a hexadecimal integer

 </td></tr><tr><td valign="top"><code>'e'</code>, <code>'E'</code>
     </td><td valign="top"> floating point
     </td><td> The result is formatted as a decimal number in computerized
     scientific notation

 </td></tr><tr><td valign="top"><code>'f'</code>
     </td><td valign="top"> floating point
     </td><td> The result is formatted as a decimal number

 </td></tr><tr><td valign="top"><code>'g'</code>, <code>'G'</code>
     </td><td valign="top"> floating point
     </td><td> The result is formatted using computerized scientific notation or
     decimal format, depending on the precision and the value after rounding.

 </td></tr><tr><td valign="top"><code>'a'</code>, <code>'A'</code>
     </td><td valign="top"> floating point
     </td><td> The result is formatted as a hexadecimal floating-point number with
     a significand and an exponent

 </td></tr><tr><td valign="top"><code>'t'</code>, <code>'T'</code>
     </td><td valign="top"> date/time
     </td><td> Prefix for date and time conversion characters.  See <a href="#dt">Date/Time Conversions</a>.

 </td></tr><tr><td valign="top"><code>'%'</code>
     </td><td valign="top"> percent
     </td><td> The result is a literal <code>'%'</code> (<tt>'\u0025'</tt>)

 </td></tr><tr><td valign="top"><code>'n'</code>
     </td><td valign="top"> line separator
     </td><td> The result is the platform-specific line separator

 </td></tr></tbody></table>

 <p> Any characters not explicitly defined as conversions are illegal and are
 reserved for future extensions.

 </p><h4><a name="dt">Date/Time Conversions</a></h4>

 <p> The following date and time conversion suffix characters are defined for
 the <code>'t'</code> and <code>'T'</code> conversions.  The types are similar to but
 not completely identical to those defined by GNU <code>date</code> and POSIX
 <code>strftime(3c)</code>.  Additional conversion types are provided to access
 Java-specific functionality (e.g. <code>'L'</code> for milliseconds within the
 second).

 </p><p> The following conversion characters are used for formatting times:

 </p><table summary="time" cellpadding="5">

 <tbody><tr><td valign="top"> <code>'H'</code>
     </td><td> Hour of the day for the 24-hour clock, formatted as two digits with
     a leading zero as necessary i.e. <code>00 - 23</code>.

 </td></tr><tr><td valign="top"><code>'I'</code>
     </td><td> Hour for the 12-hour clock, formatted as two digits with a leading
     zero as necessary, i.e.  <code>01 - 12</code>.

 </td></tr><tr><td valign="top"><code>'k'</code>
     </td><td> Hour of the day for the 24-hour clock, i.e. <code>0 - 23</code>.

 </td></tr><tr><td valign="top"><code>'l'</code>
     </td><td> Hour for the 12-hour clock, i.e. <code>1 - 12</code>.

 </td></tr><tr><td valign="top"><code>'M'</code>
     </td><td> Minute within the hour formatted as two digits with a leading zero
     as necessary, i.e.  <code>00 - 59</code>.

 </td></tr><tr><td valign="top"><code>'S'</code>
     </td><td> Seconds within the minute, formatted as two digits with a leading
     zero as necessary, i.e. <code>00 - 60</code> ("<code>60</code>" is a special
     value required to support leap seconds).

 </td></tr><tr><td valign="top"><code>'L'</code>
     </td><td> Millisecond within the second formatted as three digits with
     leading zeros as necessary, i.e. <code>000 - 999</code>.

 </td></tr><tr><td valign="top"><code>'N'</code>
     </td><td> Nanosecond within the second, formatted as nine digits with leading
     zeros as necessary, i.e. <code>000000000 - 999999999</code>.

 </td></tr><tr><td valign="top"><code>'p'</code>
     </td><td> Locale-specific <a href="http://docs.oracle.com/javase/7/docs/api/java/text/DateFormatSymbols.html#getAmPmStrings%28%29">morning or afternoon</a> marker
     in lower case, e.g."<code>am</code>" or "<code>pm</code>". Use of the conversion
     prefix <code>'T'</code> forces this output to upper case.

 </td></tr><tr><td valign="top"><code>'z'</code>
     </td><td> <a href="http://www.ietf.org/rfc/rfc0822.txt">RFC&nbsp;822</a>
     style numeric time zone offset from GMT, e.g. <code>-0800</code>.  This
     value will be adjusted as necessary for Daylight Saving Time.  For
     <code>long</code>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Long.html" title="class in java.lang"><code>Long</code></a>, and <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Date.html" title="class in java.util"><code>Date</code></a> the time zone used is
     the <a href="http://docs.oracle.com/javase/7/docs/api/java/util/TimeZone.html#getDefault%28%29">default time zone</a> for this
     instance of the Java virtual machine.

 </td></tr><tr><td valign="top"><code>'Z'</code>
     </td><td> A string representing the abbreviation for the time zone.  This
     value will be adjusted as necessary for Daylight Saving Time.  For
     <code>long</code>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Long.html" title="class in java.lang"><code>Long</code></a>, and <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Date.html" title="class in java.util"><code>Date</code></a> the  time zone used is
     the <a href="http://docs.oracle.com/javase/7/docs/api/java/util/TimeZone.html#getDefault%28%29">default time zone</a> for this
     instance of the Java virtual machine.  The Formatter's locale will
     supersede the locale of the argument (if any).

 </td></tr><tr><td valign="top"><code>'s'</code>
     </td><td> Seconds since the beginning of the epoch starting at 1 January 1970
     <code>00:00:00</code> UTC, i.e. <code>Long.MIN_VALUE/1000</code> to
     <code>Long.MAX_VALUE/1000</code>.

 </td></tr><tr><td valign="top"><code>'Q'</code>
     </td><td> Milliseconds since the beginning of the epoch starting at 1 January
     1970 <code>00:00:00</code> UTC, i.e. <code>Long.MIN_VALUE</code> to
     <code>Long.MAX_VALUE</code>.

 </td></tr></tbody></table>

 <p> The following conversion characters are used for formatting dates:

 </p><table summary="date" cellpadding="5">

 <tbody><tr><td valign="top"><code>'B'</code>
     </td><td> Locale-specific <a href="http://docs.oracle.com/javase/7/docs/api/java/text/DateFormatSymbols.html#getMonths%28%29">full month name</a>, e.g. <code>"January"</code>, <code>"February"</code>.

 </td></tr><tr><td valign="top"><code>'b'</code>
     </td><td> Locale-specific <a href="http://docs.oracle.com/javase/7/docs/api/java/text/DateFormatSymbols.html#getShortMonths%28%29">abbreviated month name</a>,
     e.g. <code>"Jan"</code>, <code>"Feb"</code>.

 </td></tr><tr><td valign="top"><code>'h'</code>
     </td><td> Same as <code>'b'</code>.

 </td></tr><tr><td valign="top"><code>'A'</code>
     </td><td> Locale-specific full name of the <a href="http://docs.oracle.com/javase/7/docs/api/java/text/DateFormatSymbols.html#getWeekdays%28%29">day of the week</a>,
     e.g. <code>"Sunday"</code>, <code>"Monday"</code>

 </td></tr><tr><td valign="top"><code>'a'</code>
     </td><td> Locale-specific short name of the <a href="http://docs.oracle.com/javase/7/docs/api/java/text/DateFormatSymbols.html#getShortWeekdays%28%29">day of the week</a>,
     e.g. <code>"Sun"</code>, <code>"Mon"</code>

 </td></tr><tr><td valign="top"><code>'C'</code>
     </td><td> Four-digit year divided by <code>100</code>, formatted as two digits
     with leading zero as necessary, i.e. <code>00 - 99</code>

 </td></tr><tr><td valign="top"><code>'Y'</code>
     </td><td> Year, formatted as at least four digits with leading zeros as
     necessary, e.g. <code>0092</code> equals <code>92</code> CE for the Gregorian
     calendar.

 </td></tr><tr><td valign="top"><code>'y'</code>
     </td><td> Last two digits of the year, formatted with leading zeros as
     necessary, i.e. <code>00 - 99</code>.

 </td></tr><tr><td valign="top"><code>'j'</code>
     </td><td> Day of year, formatted as three digits with leading zeros as
     necessary, e.g. <code>001 - 366</code> for the Gregorian calendar.

 </td></tr><tr><td valign="top"><code>'m'</code>
     </td><td> Month, formatted as two digits with leading zeros as necessary,
     i.e. <code>01 - 13</code>.

 </td></tr><tr><td valign="top"><code>'d'</code>
     </td><td> Day of month, formatted as two digits with leading zeros as
     necessary, i.e. <code>01 - 31</code>

 </td></tr><tr><td valign="top"><code>'e'</code>
     </td><td> Day of month, formatted as two digits, i.e. <code>1 - 31</code>.

 </td></tr></tbody></table>

 <p> The following conversion characters are used for formatting common
 date/time compositions.

 </p><table summary="composites" cellpadding="5">

 <tbody><tr><td valign="top"><code>'R'</code>
     </td><td> Time formatted for the 24-hour clock as <code>"%tH:%tM"</code>

 </td></tr><tr><td valign="top"><code>'T'</code>
     </td><td> Time formatted for the 24-hour clock as <code>"%tH:%tM:%tS"</code>.

 </td></tr><tr><td valign="top"><code>'r'</code>
     </td><td> Time formatted for the 12-hour clock as <code>"%tI:%tM:%tS %Tp"</code>.
     The location of the morning or afternoon marker (<code>'%Tp'</code>) may be
     locale-dependent.

 </td></tr><tr><td valign="top"><code>'D'</code>
     </td><td> Date formatted as <code>"%tm/%td/%ty"</code>.

 </td></tr><tr><td valign="top"><code>'F'</code>
     </td><td> <a href="http://www.w3.org/TR/NOTE-datetime">ISO&nbsp;8601</a>
     complete date formatted as <code>"%tY-%tm-%td"</code>.

 </td></tr><tr><td valign="top"><code>'c'</code>
     </td><td> Date and time formatted as <code>"%ta %tb %td %tT %tZ %tY"</code>,
     e.g. <code>"Sun Jul 20 16:17:00 EDT 1969"</code>.

 </td></tr></tbody></table>

 <p> Any characters not explicitly defined as date/time conversion suffixes
 are illegal and are reserved for future extensions.

 </p><h4> Flags </h4>

 <p> The following table summarizes the supported flags.  <i>y</i> means the
 flag is supported for the indicated argument types.

 </p><table summary="genConv" cellpadding="5">

 <tbody><tr><th valign="bottom"> Flag </th><th valign="bottom"> General
     </th><th valign="bottom"> Character </th><th valign="bottom"> Integral
     </th><th valign="bottom"> Floating Point
     </th><th valign="bottom"> Date/Time
     </th><th valign="bottom"> Description

 </th></tr><tr><td> '-' </td><td align="center" valign="top"> y
     </td><td align="center" valign="top"> y
     </td><td align="center" valign="top"> y
     </td><td align="center" valign="top"> y
     </td><td align="center" valign="top"> y
     </td><td> The result will be left-justified.

 </td></tr><tr><td> '#' </td><td align="center" valign="top"> y<sup>1</sup>
     </td><td align="center" valign="top"> -
     </td><td align="center" valign="top"> y<sup>3</sup>
     </td><td align="center" valign="top"> y
     </td><td align="center" valign="top"> -
     </td><td> The result should use a conversion-dependent alternate form

 </td></tr><tr><td> '+' </td><td align="center" valign="top"> -
     </td><td align="center" valign="top"> -
     </td><td align="center" valign="top"> y<sup>4</sup>
     </td><td align="center" valign="top"> y
     </td><td align="center" valign="top"> -
     </td><td> The result will always include a sign

 </td></tr><tr><td> '&nbsp;&nbsp;' </td><td align="center" valign="top"> -
     </td><td align="center" valign="top"> -
     </td><td align="center" valign="top"> y<sup>4</sup>
     </td><td align="center" valign="top"> y
     </td><td align="center" valign="top"> -
     </td><td> The result will include a leading space for positive values

 </td></tr><tr><td> '0' </td><td align="center" valign="top"> -
     </td><td align="center" valign="top"> -
     </td><td align="center" valign="top"> y
     </td><td align="center" valign="top"> y
     </td><td align="center" valign="top"> -
     </td><td> The result will be zero-padded

 </td></tr><tr><td> ',' </td><td align="center" valign="top"> -
     </td><td align="center" valign="top"> -
     </td><td align="center" valign="top"> y<sup>2</sup>
     </td><td align="center" valign="top"> y<sup>5</sup>
     </td><td align="center" valign="top"> -
     </td><td> The result will include locale-specific <a href="http://docs.oracle.com/javase/7/docs/api/java/text/DecimalFormatSymbols.html#getGroupingSeparator%28%29">grouping separators</a>

 </td></tr><tr><td> '(' </td><td align="center" valign="top"> -
     </td><td align="center" valign="top"> -
     </td><td align="center" valign="top"> y<sup>4</sup>
     </td><td align="center" valign="top"> y<sup>5</sup>
     </td><td align="center"> -
     </td><td> The result will enclose negative numbers in parentheses

 </td></tr></tbody></table>

 <p> <sup>1</sup> Depends on the definition of <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Formattable.html" title="interface in java.util"><code>Formattable</code></a>.

 </p><p> <sup>2</sup> For <code>'d'</code> conversion only.

 </p><p> <sup>3</sup> For <code>'o'</code>, <code>'x'</code>, and <code>'X'</code>
 conversions only.

 </p><p> <sup>4</sup> For <code>'d'</code>, <code>'o'</code>, <code>'x'</code>, and
 <code>'X'</code> conversions applied to <a href="http://docs.oracle.com/javase/7/docs/api/java/math/BigInteger.html" title="class in java.math"><code>BigInteger</code></a>
 or <code>'d'</code> applied to <code>byte</code>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Byte.html" title="class in java.lang"><code>Byte</code></a>, <code>short</code>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Short.html" title="class in java.lang"><code>Short</code></a>, <code>int</code> and <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Integer.html" title="class in java.lang"><code>Integer</code></a>, <code>long</code>, and <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Long.html" title="class in java.lang"><code>Long</code></a>.

 </p><p> <sup>5</sup> For <code>'e'</code>, <code>'E'</code>, <code>'f'</code>,
 <code>'g'</code>, and <code>'G'</code> conversions only.

 </p><p> Any characters not explicitly defined as flags are illegal and are
 reserved for future extensions.

 </p><h4> Width </h4>

 <p> The width is the minimum number of characters to be written to the
 output.  For the line separator conversion, width is not applicable; if it
 is provided, an exception will be thrown.

 </p><h4> Precision </h4>

 <p> For general argument types, the precision is the maximum number of
 characters to be written to the output.

 </p><p> For the floating-point conversions <code>'e'</code>, <code>'E'</code>, and
 <code>'f'</code> the precision is the number of digits after the decimal
 separator.  If the conversion is <code>'g'</code> or <code>'G'</code>, then the
 precision is the total number of digits in the resulting magnitude after
 rounding.  If the conversion is <code>'a'</code> or <code>'A'</code>, then the
 precision must not be specified.

 </p><p> For character, integral, and date/time argument types and the percent
 and line separator conversions, the precision is not applicable; if a
 precision is provided, an exception will be thrown.

 </p><h4> Argument Index </h4>

 <p> The argument index is a decimal integer indicating the position of the
 argument in the argument list.  The first argument is referenced by
 "<code>1$</code>", the second by "<code>2$</code>", etc.

 </p><p> Another way to reference arguments by position is to use the
 <code>'&lt;'</code> (<tt>'\u003c'</tt>) flag, which causes the argument for
 the previous format specifier to be re-used.  For example, the following two
 statements would produce identical strings:

 </p><blockquote><pre>   Calendar c = ...;
   String s1 = String.format("Duke's Birthday: %1$tm %1$te,%1$tY", c);

   String s2 = String.format("Duke's Birthday: %1$tm %&lt;te,%&lt;tY", c);
 </pre></blockquote>

 <hr>
 <h3><a name="detail">Details</a></h3>

 <p> This section is intended to provide behavioral details for formatting,
 including conditions and exceptions, supported data types, localization, and
 interactions between flags, conversions, and data types.  For an overview of
 formatting concepts, refer to the <a href="#summary">Summary</a>

 </p><p> Any characters not explicitly defined as conversions, date/time
 conversion suffixes, or flags are illegal and are reserved for
 future extensions.  Use of such a character in a format string will
 cause an <a href="http://docs.oracle.com/javase/7/docs/api/java/util/UnknownFormatConversionException.html" title="class in java.util"><code>UnknownFormatConversionException</code></a> or <a href="http://docs.oracle.com/javase/7/docs/api/java/util/UnknownFormatFlagsException.html" title="class in java.util"><code>UnknownFormatFlagsException</code></a> to be thrown.

 </p><p> If the format specifier contains a width or precision with an invalid
 value or which is otherwise unsupported, then a <a href="http://docs.oracle.com/javase/7/docs/api/java/util/IllegalFormatWidthException.html" title="class in java.util"><code>IllegalFormatWidthException</code></a> or <a href="http://docs.oracle.com/javase/7/docs/api/java/util/IllegalFormatPrecisionException.html" title="class in java.util"><code>IllegalFormatPrecisionException</code></a>
 respectively will be thrown.

 </p><p> If a format specifier contains a conversion character that is not
 applicable to the corresponding argument, then an <a href="http://docs.oracle.com/javase/7/docs/api/java/util/IllegalFormatConversionException.html" title="class in java.util"><code>IllegalFormatConversionException</code></a> will be thrown.

 </p><p> All specified exceptions may be thrown by any of the <code>format</code>
 methods of <code>Formatter</code> as well as by any <code>format</code> convenience
 methods such as <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html#format%28java.lang.String,%20java.lang.Object...%29"><code>String.format</code></a> and
 <a href="http://docs.oracle.com/javase/7/docs/api/java/io/PrintStream.html#printf%28java.lang.String,%20java.lang.Object...%29"><code>PrintStream.printf</code></a>.

 </p><p> Conversions denoted by an upper-case character (i.e. <code>'B'</code>,
 <code>'H'</code>, <code>'S'</code>, <code>'C'</code>, <code>'X'</code>, <code>'E'</code>,
 <code>'G'</code>, <code>'A'</code>, and <code>'T'</code>) are the same as those for the
 corresponding lower-case conversion characters except that the result is
 converted to upper case according to the rules of the prevailing <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Locale.html" title="class in java.util"><code>Locale</code></a>.  The result is equivalent to the following
 invocation of <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html#toUpperCase%28%29"><code>String.toUpperCase()</code></a>

 </p><pre>    out.toUpperCase() </pre>

 <h4><a name="dgen">General</a></h4>

 <p> The following general conversions may be applied to any argument type:

 </p><table summary="dgConv" cellpadding="5">

 <tbody><tr><td valign="top"> <code>'b'</code>
     </td><td valign="top"> <tt>'\u0062'</tt>
     </td><td> Produces either "<code>true</code>" or "<code>false</code>" as returned by
     <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Boolean.html#toString%28boolean%29"><code>Boolean.toString(boolean)</code></a>.

     <p> If the argument is <code>null</code>, then the result is
     "<code>false</code>".  If the argument is a <code>boolean</code> or <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Boolean.html" title="class in java.lang"><code>Boolean</code></a>, then the result is the string returned by <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html#valueOf%28boolean%29"><code>String.valueOf()</code></a>.  Otherwise, the result is
     "<code>true</code>".

     </p><p> If the <code>'#'</code> flag is given, then a <a href="http://docs.oracle.com/javase/7/docs/api/java/util/FormatFlagsConversionMismatchException.html" title="class in java.util"><code>FormatFlagsConversionMismatchException</code></a> will be thrown.

 </p></td></tr><tr><td valign="top"> <code>'B'</code>
     </td><td valign="top"> <tt>'\u0042'</tt>
     </td><td> The upper-case variant of <code>'b'</code>.

 </td></tr><tr><td valign="top"> <code>'h'</code>
     </td><td valign="top"> <tt>'\u0068'</tt>
     </td><td> Produces a string representing the hash code value of the object.

     <p> If the argument, <i>arg</i> is <code>null</code>, then the
     result is "<code>null</code>".  Otherwise, the result is obtained
     by invoking <code>Integer.toHexString(arg.hashCode())</code>.

     </p><p> If the <code>'#'</code> flag is given, then a <a href="http://docs.oracle.com/javase/7/docs/api/java/util/FormatFlagsConversionMismatchException.html" title="class in java.util"><code>FormatFlagsConversionMismatchException</code></a> will be thrown.

 </p></td></tr><tr><td valign="top"> <code>'H'</code>
     </td><td valign="top"> <tt>'\u0048'</tt>
     </td><td> The upper-case variant of <code>'h'</code>.

 </td></tr><tr><td valign="top"> <code>'s'</code>
     </td><td valign="top"> <tt>'\u0073'</tt>
     </td><td> Produces a string.

     <p> If the argument is <code>null</code>, then the result is
     "<code>null</code>".  If the argument implements <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Formattable.html" title="interface in java.util"><code>Formattable</code></a>, then
     its <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Formattable.html#formatTo%28java.util.Formatter,%20int,%20int,%20int%29"><code>formatTo</code></a> method is invoked.
     Otherwise, the result is obtained by invoking the argument's
     <code>toString()</code> method.

     </p><p> If the <code>'#'</code> flag is given and the argument is not a <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Formattable.html" title="interface in java.util"><code>Formattable</code></a> , then a <a href="http://docs.oracle.com/javase/7/docs/api/java/util/FormatFlagsConversionMismatchException.html" title="class in java.util"><code>FormatFlagsConversionMismatchException</code></a>
     will be thrown.

 </p></td></tr><tr><td valign="top"> <code>'S'</code>
     </td><td valign="top"> <tt>'\u0053'</tt>
     </td><td> The upper-case variant of <code>'s'</code>.

 </td></tr></tbody></table>

 <p> The following <a name="dFlags">flags</a> apply to general conversions:

 </p><table summary="dFlags" cellpadding="5">

 <tbody><tr><td valign="top"> <code>'-'</code>
     </td><td valign="top"> <tt>'\u002d'</tt>
     </td><td> Left justifies the output.  Spaces (<tt>'\u0020'</tt>) will be
     added at the end of the converted value as required to fill the minimum
     width of the field.  If the width is not provided, then a <a href="http://docs.oracle.com/javase/7/docs/api/java/util/MissingFormatWidthException.html" title="class in java.util"><code>MissingFormatWidthException</code></a> will be thrown.  If this flag is not given
     then the output will be right-justified.

 </td></tr><tr><td valign="top"> <code>'#'</code>
     </td><td valign="top"> <tt>'\u0023'</tt>
     </td><td> Requires the output use an alternate form.  The definition of the
     form is specified by the conversion.

 </td></tr></tbody></table>

 <p> The <a name="genWidth">width</a> is the minimum number of characters to
 be written to the
 output.  If the length of the converted value is less than the width then
 the output will be padded by <tt>'&nbsp;&nbsp;'</tt> (<tt>'\u0020'</tt>)
 until the total number of characters equals the width.  The padding is on
 the left by default.  If the <code>'-'</code> flag is given, then the padding
 will be on the right.  If the width is not specified then there is no
 minimum.

 </p><p> The precision is the maximum number of characters to be written to the
 output.  The precision is applied before the width, thus the output will be
 truncated to <code>precision</code> characters even if the width is greater than
 the precision.  If the precision is not specified then there is no explicit
 limit on the number of characters.

 </p><h4><a name="dchar">Character</a></h4>

 This conversion may be applied to <code>char</code> and <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Character.html" title="class in java.lang"><code>Character</code></a>.  It
 may also be applied to the types <code>byte</code>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Byte.html" title="class in java.lang"><code>Byte</code></a>,
 <code>short</code>, and <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Short.html" title="class in java.lang"><code>Short</code></a>, <code>int</code> and <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Integer.html" title="class in java.lang"><code>Integer</code></a> when
 <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Character.html#isValidCodePoint%28int%29"><code>Character.isValidCodePoint(int)</code></a> returns <code>true</code>.  If it returns
 <code>false</code> then an <a href="http://docs.oracle.com/javase/7/docs/api/java/util/IllegalFormatCodePointException.html" title="class in java.util"><code>IllegalFormatCodePointException</code></a> will be
 thrown.

 <table summary="charConv" cellpadding="5">

 <tbody><tr><td valign="top"> <code>'c'</code>
     </td><td valign="top"> <tt>'\u0063'</tt>
     </td><td> Formats the argument as a Unicode character as described in <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Character.html#unicode">Unicode Character
     Representation</a>.  This may be more than one 16-bit <code>char</code> in
     the case where the argument represents a supplementary character.

     <p> If the <code>'#'</code> flag is given, then a <a href="http://docs.oracle.com/javase/7/docs/api/java/util/FormatFlagsConversionMismatchException.html" title="class in java.util"><code>FormatFlagsConversionMismatchException</code></a> will be thrown.

 </p></td></tr><tr><td valign="top"> <code>'C'</code>
     </td><td valign="top"> <tt>'\u0043'</tt>
     </td><td> The upper-case variant of <code>'c'</code>.

 </td></tr></tbody></table>

 <p> The <code>'-'</code> flag defined for <a href="#dFlags">General
 conversions</a> applies.  If the <code>'#'</code> flag is given, then a <a href="http://docs.oracle.com/javase/7/docs/api/java/util/FormatFlagsConversionMismatchException.html" title="class in java.util"><code>FormatFlagsConversionMismatchException</code></a> will be thrown.

 </p><p> The width is defined as for <a href="#genWidth">General conversions</a>.

 </p><p> The precision is not applicable.  If the precision is specified then an
 <a href="http://docs.oracle.com/javase/7/docs/api/java/util/IllegalFormatPrecisionException.html" title="class in java.util"><code>IllegalFormatPrecisionException</code></a> will be thrown.

 </p><h4><a name="dnum">Numeric</a></h4>

 <p> Numeric conversions are divided into the following categories:

 </p><ol>

 <li> <a href="#dnint"><b>Byte, Short, Integer, and Long</b></a>

 </li><li> <a href="#dnbint"><b>BigInteger</b></a>

 </li><li> <a href="#dndec"><b>Float and Double</b></a>

 </li><li> <a href="#dnbdec"><b>BigDecimal</b></a>

 </li></ol>

 <p> Numeric types will be formatted according to the following algorithm:

 </p><p><b><a name="l10n algorithm"> Number Localization Algorithm</a></b>

 </p><p> After digits are obtained for the integer part, fractional part, and
 exponent (as appropriate for the data type), the following transformation
 is applied:

 </p><ol>

 <li> Each digit character <i>d</i> in the string is replaced by a
 locale-specific digit computed relative to the current locale's
 <a href="http://docs.oracle.com/javase/7/docs/api/java/text/DecimalFormatSymbols.html#getZeroDigit%28%29">zero digit</a>
 <i>z</i>; that is <i>d&nbsp;-&nbsp;</i> <code>'0'</code>
 <i>&nbsp;+&nbsp;z</i>.

 </li><li> If a decimal separator is present, a locale-specific <a href="http://docs.oracle.com/javase/7/docs/api/java/text/DecimalFormatSymbols.html#getDecimalSeparator%28%29">decimal separator</a> is
 substituted.

 </li><li> If the <code>','</code> (<tt>'\u002c'</tt>)
 <a name="l10n group">flag</a> is given, then the locale-specific <a href="http://docs.oracle.com/javase/7/docs/api/java/text/DecimalFormatSymbols.html#getGroupingSeparator%28%29">grouping separator</a> is
 inserted by scanning the integer part of the string from least significant
 to most significant digits and inserting a separator at intervals defined by
 the locale's <a href="http://docs.oracle.com/javase/7/docs/api/java/text/DecimalFormat.html#getGroupingSize%28%29">grouping
 size</a>.

 </li><li> If the <code>'0'</code> flag is given, then the locale-specific <a href="http://docs.oracle.com/javase/7/docs/api/java/text/DecimalFormatSymbols.html#getZeroDigit%28%29">zero digits</a> are inserted
 after the sign character, if any, and before the first non-zero digit, until
 the length of the string is equal to the requested field width.

 </li><li> If the value is negative and the <code>'('</code> flag is given, then a
 <code>'('</code> (<tt>'\u0028'</tt>) is prepended and a <code>')'</code>
 (<tt>'\u0029'</tt>) is appended.

 </li><li> If the value is negative (or floating-point negative zero) and
 <code>'('</code> flag is not given, then a <code>'-'</code> (<tt>'\u002d'</tt>)
 is prepended.

 </li><li> If the <code>'+'</code> flag is given and the value is positive or zero (or
 floating-point positive zero), then a <code>'+'</code> (<tt>'\u002b'</tt>)
 will be prepended.

 </li></ol>

 <p> If the value is NaN or positive infinity the literal strings "NaN" or
 "Infinity" respectively, will be output.  If the value is negative infinity,
 then the output will be "(Infinity)" if the <code>'('</code> flag is given
 otherwise the output will be "-Infinity".  These values are not localized.

 </p><p><a name="dnint"><b> Byte, Short, Integer, and Long </b></a>

 </p><p> The following conversions may be applied to <code>byte</code>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Byte.html" title="class in java.lang"><code>Byte</code></a>,
 <code>short</code>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Short.html" title="class in java.lang"><code>Short</code></a>, <code>int</code> and <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Integer.html" title="class in java.lang"><code>Integer</code></a>,
 <code>long</code>, and <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Long.html" title="class in java.lang"><code>Long</code></a>.

 </p><table summary="IntConv" cellpadding="5">

 <tbody><tr><td valign="top"> <code>'d'</code>
     </td><td valign="top"> <tt>'\u0054'</tt>
     </td><td> Formats the argument as a decimal integer. The <a href="#l10n%20algorithm">localization algorithm</a> is applied.

     <p> If the <code>'0'</code> flag is given and the value is negative, then
     the zero padding will occur after the sign.

     </p><p> If the <code>'#'</code> flag is given then a <a href="http://docs.oracle.com/javase/7/docs/api/java/util/FormatFlagsConversionMismatchException.html" title="class in java.util"><code>FormatFlagsConversionMismatchException</code></a> will be thrown.

 </p></td></tr><tr><td valign="top"> <code>'o'</code>
     </td><td valign="top"> <tt>'\u006f'</tt>
     </td><td> Formats the argument as an integer in base eight.  No localization
     is applied.

     <p> If <i>x</i> is negative then the result will be an unsigned value
     generated by adding 2<sup>n</sup> to the value where <code>n</code> is the
     number of bits in the type as returned by the static <code>SIZE</code> field
     in the <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Byte.html#SIZE">Byte</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Short.html#SIZE">Short</a>,
     <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Integer.html#SIZE">Integer</a>, or <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Long.html#SIZE">Long</a>
     classes as appropriate.

     </p><p> If the <code>'#'</code> flag is given then the output will always begin
     with the radix indicator <code>'0'</code>.

     </p><p> If the <code>'0'</code> flag is given then the output will be padded
     with leading zeros to the field width following any indication of sign.

     </p><p> If <code>'('</code>, <code>'+'</code>, '&nbsp;&nbsp;', or <code>','</code> flags
     are given then a <a href="http://docs.oracle.com/javase/7/docs/api/java/util/FormatFlagsConversionMismatchException.html" title="class in java.util"><code>FormatFlagsConversionMismatchException</code></a> will be
     thrown.

 </p></td></tr><tr><td valign="top"> <code>'x'</code>
     </td><td valign="top"> <tt>'\u0078'</tt>
     </td><td> Formats the argument as an integer in base sixteen. No
     localization is applied.

     <p> If <i>x</i> is negative then the result will be an unsigned value
     generated by adding 2<sup>n</sup> to the value where <code>n</code> is the
     number of bits in the type as returned by the static <code>SIZE</code> field
     in the <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Byte.html#SIZE">Byte</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Short.html#SIZE">Short</a>,
     <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Integer.html#SIZE">Integer</a>, or <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Long.html#SIZE">Long</a>
     classes as appropriate.

     </p><p> If the <code>'#'</code> flag is given then the output will always begin
     with the radix indicator <code>"0x"</code>.

     </p><p> If the <code>'0'</code> flag is given then the output will be padded to
     the field width with leading zeros after the radix indicator or sign (if
     present).

     </p><p> If <code>'('</code>, <tt>'&nbsp;&nbsp;'</tt>, <code>'+'</code>, or
     <code>','</code> flags are given then a <a href="http://docs.oracle.com/javase/7/docs/api/java/util/FormatFlagsConversionMismatchException.html" title="class in java.util"><code>FormatFlagsConversionMismatchException</code></a> will be thrown.

 </p></td></tr><tr><td valign="top"> <code>'X'</code>
     </td><td valign="top"> <tt>'\u0058'</tt>
     </td><td> The upper-case variant of <code>'x'</code>.  The entire string
     representing the number will be converted to <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html#toUpperCase%28java.util.Locale%29">upper case</a> including the <code>'x'</code> (if any) and
     all hexadecimal digits <code>'a'</code> - <code>'f'</code>
     (<tt>'\u0061'</tt> -  <tt>'\u0066'</tt>).

 </td></tr></tbody></table>

 <p> If the conversion is <code>'o'</code>, <code>'x'</code>, or <code>'X'</code> and
 both the <code>'#'</code> and the <code>'0'</code> flags are given, then result will
 contain the radix indicator (<code>'0'</code> for octal and <code>"0x"</code> or
 <code>"0X"</code> for hexadecimal), some number of zeros (based on the width),
 and the value.

 </p><p> If the <code>'-'</code> flag is not given, then the space padding will occur
 before the sign.

 </p><p> The following <a name="intFlags">flags</a> apply to numeric integral
 conversions:

 </p><table summary="intFlags" cellpadding="5">

 <tbody><tr><td valign="top"> <code>'+'</code>
     </td><td valign="top"> <tt>'\u002b'</tt>
     </td><td> Requires the output to include a positive sign for all positive
     numbers.  If this flag is not given then only negative values will
     include a sign.

     <p> If both the <code>'+'</code> and <tt>'&nbsp;&nbsp;'</tt> flags are given
     then an <a href="http://docs.oracle.com/javase/7/docs/api/java/util/IllegalFormatFlagsException.html" title="class in java.util"><code>IllegalFormatFlagsException</code></a> will be thrown.

 </p></td></tr><tr><td valign="top"> <tt>'&nbsp;&nbsp;'</tt>
     </td><td valign="top"> <tt>'\u0020'</tt>
     </td><td> Requires the output to include a single extra space
     (<tt>'\u0020'</tt>) for non-negative values.

     <p> If both the <code>'+'</code> and <tt>'&nbsp;&nbsp;'</tt> flags are given
     then an <a href="http://docs.oracle.com/javase/7/docs/api/java/util/IllegalFormatFlagsException.html" title="class in java.util"><code>IllegalFormatFlagsException</code></a> will be thrown.

 </p></td></tr><tr><td valign="top"> <code>'0'</code>
     </td><td valign="top"> <tt>'\u0030'</tt>
     </td><td> Requires the output to be padded with leading <a href="http://docs.oracle.com/javase/7/docs/api/java/text/DecimalFormatSymbols.html#getZeroDigit%28%29">zeros</a> to the minimum field
     width following any sign or radix indicator except when converting NaN
     or infinity.  If the width is not provided, then a <a href="http://docs.oracle.com/javase/7/docs/api/java/util/MissingFormatWidthException.html" title="class in java.util"><code>MissingFormatWidthException</code></a> will be thrown.

     <p> If both the <code>'-'</code> and <code>'0'</code> flags are given then an
     <a href="http://docs.oracle.com/javase/7/docs/api/java/util/IllegalFormatFlagsException.html" title="class in java.util"><code>IllegalFormatFlagsException</code></a> will be thrown.

 </p></td></tr><tr><td valign="top"> <code>','</code>
     </td><td valign="top"> <tt>'\u002c'</tt>
     </td><td> Requires the output to include the locale-specific <a href="http://docs.oracle.com/javase/7/docs/api/java/text/DecimalFormatSymbols.html#getGroupingSeparator%28%29">group separators</a> as
     described in the <a href="#l10n%20group">"group" section</a> of the
     localization algorithm.

 </td></tr><tr><td valign="top"> <code>'('</code>
     </td><td valign="top"> <tt>'\u0028'</tt>
     </td><td> Requires the output to prepend a <code>'('</code>
     (<tt>'\u0028'</tt>) and append a <code>')'</code>
     (<tt>'\u0029'</tt>) to negative values.

 </td></tr></tbody></table>

 <p> If no <a name="intdFlags">flags</a> are given the default formatting is
 as follows:

 </p><ul>

 <li> The output is right-justified within the <code>width</code>

 </li><li> Negative numbers begin with a <code>'-'</code> (<tt>'\u002d'</tt>)

 </li><li> Positive numbers and zero do not include a sign or extra leading
 space

 </li><li> No grouping separators are included

 </li></ul>

 <p> The <a name="intWidth">width</a> is the minimum number of characters to
 be written to the output.  This includes any signs, digits, grouping
 separators, radix indicator, and parentheses.  If the length of the
 converted value is less than the width then the output will be padded by
 spaces (<tt>'\u0020'</tt>) until the total number of characters equals
 width.  The padding is on the left by default.  If <code>'-'</code> flag is
 given then the padding will be on the right.  If width is not specified then
 there is no minimum.

 </p><p> The precision is not applicable.  If precision is specified then an
 <a href="http://docs.oracle.com/javase/7/docs/api/java/util/IllegalFormatPrecisionException.html" title="class in java.util"><code>IllegalFormatPrecisionException</code></a> will be thrown.

 </p><p><a name="dnbint"><b> BigInteger </b></a>

 </p><p> The following conversions may be applied to <a href="http://docs.oracle.com/javase/7/docs/api/java/math/BigInteger.html" title="class in java.math"><code>BigInteger</code></a>.

 </p><table summary="BIntConv" cellpadding="5">

 <tbody><tr><td valign="top"> <code>'d'</code>
     </td><td valign="top"> <tt>'\u0054'</tt>
     </td><td> Requires the output to be formatted as a decimal integer. The <a href="#l10n%20algorithm">localization algorithm</a> is applied.

     <p> If the <code>'#'</code> flag is given <a href="http://docs.oracle.com/javase/7/docs/api/java/util/FormatFlagsConversionMismatchException.html" title="class in java.util"><code>FormatFlagsConversionMismatchException</code></a> will be thrown.

 </p></td></tr><tr><td valign="top"> <code>'o'</code>
     </td><td valign="top"> <tt>'\u006f'</tt>
     </td><td> Requires the output to be formatted as an integer in base eight.
     No localization is applied.

     <p> If <i>x</i> is negative then the result will be a signed value
     beginning with <code>'-'</code> (<tt>'\u002d'</tt>).  Signed output is
     allowed for this type because unlike the primitive types it is not
     possible to create an unsigned equivalent without assuming an explicit
     data-type size.

     </p><p> If <i>x</i> is positive or zero and the <code>'+'</code> flag is given
     then the result will begin with <code>'+'</code> (<tt>'\u002b'</tt>).

     </p><p> If the <code>'#'</code> flag is given then the output will always begin
     with <code>'0'</code> prefix.

     </p><p> If the <code>'0'</code> flag is given then the output will be padded
     with leading zeros to the field width following any indication of sign.

     </p><p> If the <code>','</code> flag is given then a <a href="http://docs.oracle.com/javase/7/docs/api/java/util/FormatFlagsConversionMismatchException.html" title="class in java.util"><code>FormatFlagsConversionMismatchException</code></a> will be thrown.

 </p></td></tr><tr><td valign="top"> <code>'x'</code>
     </td><td valign="top"> <tt>'\u0078'</tt>
     </td><td> Requires the output to be formatted as an integer in base
     sixteen.  No localization is applied.

     <p> If <i>x</i> is negative then the result will be a signed value
     beginning with <code>'-'</code> (<tt>'\u002d'</tt>).  Signed output is
     allowed for this type because unlike the primitive types it is not
     possible to create an unsigned equivalent without assuming an explicit
     data-type size.

     </p><p> If <i>x</i> is positive or zero and the <code>'+'</code> flag is given
     then the result will begin with <code>'+'</code> (<tt>'\u002b'</tt>).

     </p><p> If the <code>'#'</code> flag is given then the output will always begin
     with the radix indicator <code>"0x"</code>.

     </p><p> If the <code>'0'</code> flag is given then the output will be padded to
     the field width with leading zeros after the radix indicator or sign (if
     present).

     </p><p> If the <code>','</code> flag is given then a <a href="http://docs.oracle.com/javase/7/docs/api/java/util/FormatFlagsConversionMismatchException.html" title="class in java.util"><code>FormatFlagsConversionMismatchException</code></a> will be thrown.

 </p></td></tr><tr><td valign="top"> <code>'X'</code>
     </td><td valign="top"> <tt>'\u0058'</tt>
     </td><td> The upper-case variant of <code>'x'</code>.  The entire string
     representing the number will be converted to <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html#toUpperCase%28java.util.Locale%29">upper case</a> including the <code>'x'</code> (if any) and
     all hexadecimal digits <code>'a'</code> - <code>'f'</code>
     (<tt>'\u0061'</tt> - <tt>'\u0066'</tt>).

 </td></tr></tbody></table>

 <p> If the conversion is <code>'o'</code>, <code>'x'</code>, or <code>'X'</code> and
 both the <code>'#'</code> and the <code>'0'</code> flags are given, then result will
 contain the base indicator (<code>'0'</code> for octal and <code>"0x"</code> or
 <code>"0X"</code> for hexadecimal), some number of zeros (based on the width),
 and the value.

 </p><p> If the <code>'0'</code> flag is given and the value is negative, then the
 zero padding will occur after the sign.

 </p><p> If the <code>'-'</code> flag is not given, then the space padding will occur
 before the sign.

 </p><p> All <a href="#intFlags">flags</a> defined for Byte, Short, Integer, and
 Long apply.  The <a href="#intdFlags">default behavior</a> when no flags are
 given is the same as for Byte, Short, Integer, and Long.

 </p><p> The specification of <a href="#intWidth">width</a> is the same as
 defined for Byte, Short, Integer, and Long.

 </p><p> The precision is not applicable.  If precision is specified then an
 <a href="http://docs.oracle.com/javase/7/docs/api/java/util/IllegalFormatPrecisionException.html" title="class in java.util"><code>IllegalFormatPrecisionException</code></a> will be thrown.

 </p><p><a name="dndec"><b> Float and Double</b></a>

 </p><p> The following conversions may be applied to <code>float</code>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Float.html" title="class in java.lang"><code>Float</code></a>, <code>double</code> and <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Double.html" title="class in java.lang"><code>Double</code></a>.

 </p><table summary="floatConv" cellpadding="5">

 <tbody><tr><td valign="top"> <code>'e'</code>
     </td><td valign="top"> <tt>'\u0065'</tt>
     </td><td> Requires the output to be formatted using <a name="scientific">computerized scientific notation</a>.  The <a href="#l10n%20algorithm">localization algorithm</a> is applied.

     <p> The formatting of the magnitude <i>m</i> depends upon its value.

     </p><p> If <i>m</i> is NaN or infinite, the literal strings "NaN" or
     "Infinity", respectively, will be output.  These values are not
     localized.

     </p><p> If <i>m</i> is positive-zero or negative-zero, then the exponent
     will be <code>"+00"</code>.

     </p><p> Otherwise, the result is a string that represents the sign and
     magnitude (absolute value) of the argument.  The formatting of the sign
     is described in the <a href="#l10n%20algorithm">localization
     algorithm</a>. The formatting of the magnitude <i>m</i> depends upon its
     value.

     </p><p> Let <i>n</i> be the unique integer such that 10<sup><i>n</i></sup>
     &lt;= <i>m</i> &lt; 10<sup><i>n</i>+1</sup>; then let <i>a</i> be the
     mathematically exact quotient of <i>m</i> and 10<sup><i>n</i></sup> so
     that 1 &lt;= <i>a</i> &lt; 10. The magnitude is then represented as the
     integer part of <i>a</i>, as a single decimal digit, followed by the
     decimal separator followed by decimal digits representing the fractional
     part of <i>a</i>, followed by the exponent symbol <code>'e'</code>
     (<tt>'\u0065'</tt>), followed by the sign of the exponent, followed
     by a representation of <i>n</i> as a decimal integer, as produced by the
     method <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Long.html#toString%28long,%20int%29"><code>Long.toString(long, int)</code></a>, and zero-padded to include at
     least two digits.

     </p><p> The number of digits in the result for the fractional part of
     <i>m</i> or <i>a</i> is equal to the precision.  If the precision is not
     specified then the default value is <code>6</code>. If the precision is less
     than the number of digits which would appear after the decimal point in
     the string returned by <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Float.html#toString%28float%29"><code>Float.toString(float)</code></a> or <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Double.html#toString%28double%29"><code>Double.toString(double)</code></a> respectively, then the value will be rounded
     using the <a href="http://docs.oracle.com/javase/7/docs/api/java/math/BigDecimal.html#ROUND_HALF_UP">round half up
     algorithm</a>.  Otherwise, zeros may be appended to reach the precision.
     For a canonical representation of the value, use <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Float.html#toString%28float%29"><code>Float.toString(float)</code></a> or <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Double.html#toString%28double%29"><code>Double.toString(double)</code></a> as
     appropriate.

     </p><p>If the <code>','</code> flag is given, then an <a href="http://docs.oracle.com/javase/7/docs/api/java/util/FormatFlagsConversionMismatchException.html" title="class in java.util"><code>FormatFlagsConversionMismatchException</code></a> will be thrown.

 </p></td></tr><tr><td valign="top"> <code>'E'</code>
     </td><td valign="top"> <tt>'\u0045'</tt>
     </td><td> The upper-case variant of <code>'e'</code>.  The exponent symbol
     will be <code>'E'</code> (<tt>'\u0045'</tt>).

 </td></tr><tr><td valign="top"> <code>'g'</code>
     </td><td valign="top"> <tt>'\u0067'</tt>
     </td><td> Requires the output to be formatted in general scientific notation
     as described below. The <a href="#l10n%20algorithm">localization
     algorithm</a> is applied.

     <p> After rounding for the precision, the formatting of the resulting
     magnitude <i>m</i> depends on its value.

     </p><p> If <i>m</i> is greater than or equal to 10<sup>-4</sup> but less
     than 10<sup>precision</sup> then it is represented in <i><a href="#decimal">decimal format</a></i>.

     </p><p> If <i>m</i> is less than 10<sup>-4</sup> or greater than or equal to
     10<sup>precision</sup>, then it is represented in <i><a href="#scientific">computerized scientific notation</a></i>.

     </p><p> The total number of significant digits in <i>m</i> is equal to the
     precision.  If the precision is not specified, then the default value is
     <code>6</code>.  If the precision is <code>0</code>, then it is taken to be
     <code>1</code>.

     </p><p> If the <code>'#'</code> flag is given then an <a href="http://docs.oracle.com/javase/7/docs/api/java/util/FormatFlagsConversionMismatchException.html" title="class in java.util"><code>FormatFlagsConversionMismatchException</code></a> will be thrown.

 </p></td></tr><tr><td valign="top"> <code>'G'</code>
     </td><td valign="top"> <tt>'\u0047'</tt>
     </td><td> The upper-case variant of <code>'g'</code>.

 </td></tr><tr><td valign="top"> <code>'f'</code>
     </td><td valign="top"> <tt>'\u0066'</tt>
     </td><td> Requires the output to be formatted using <a name="decimal">decimal
     format</a>.  The <a href="#l10n%20algorithm">localization algorithm</a> is
     applied.

     <p> The result is a string that represents the sign and magnitude
     (absolute value) of the argument.  The formatting of the sign is
     described in the <a href="#l10n%20algorithm">localization
     algorithm</a>. The formatting of the magnitude <i>m</i> depends upon its
     value.

     </p><p> If <i>m</i> NaN or infinite, the literal strings "NaN" or
     "Infinity", respectively, will be output.  These values are not
     localized.

     </p><p> The magnitude is formatted as the integer part of <i>m</i>, with no
     leading zeroes, followed by the decimal separator followed by one or
     more decimal digits representing the fractional part of <i>m</i>.

     </p><p> The number of digits in the result for the fractional part of
     <i>m</i> or <i>a</i> is equal to the precision.  If the precision is not
     specified then the default value is <code>6</code>. If the precision is less
     than the number of digits which would appear after the decimal point in
     the string returned by <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Float.html#toString%28float%29"><code>Float.toString(float)</code></a> or <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Double.html#toString%28double%29"><code>Double.toString(double)</code></a> respectively, then the value will be rounded
     using the <a href="http://docs.oracle.com/javase/7/docs/api/java/math/BigDecimal.html#ROUND_HALF_UP">round half up
     algorithm</a>.  Otherwise, zeros may be appended to reach the precision.
     For a canonical representation of the value, use <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Float.html#toString%28float%29"><code>Float.toString(float)</code></a> or <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Double.html#toString%28double%29"><code>Double.toString(double)</code></a> as
     appropriate.

 </p></td></tr><tr><td valign="top"> <code>'a'</code>
     </td><td valign="top"> <tt>'\u0061'</tt>
     </td><td> Requires the output to be formatted in hexadecimal exponential
     form.  No localization is applied.

     <p> The result is a string that represents the sign and magnitude
     (absolute value) of the argument <i>x</i>.

     </p><p> If <i>x</i> is negative or a negative-zero value then the result
     will begin with <code>'-'</code> (<tt>'\u002d'</tt>).

     </p><p> If <i>x</i> is positive or a positive-zero value and the
     <code>'+'</code> flag is given then the result will begin with <code>'+'</code>
     (<tt>'\u002b'</tt>).

     </p><p> The formatting of the magnitude <i>m</i> depends upon its value.

     </p><ul>

     <li> If the value is NaN or infinite, the literal strings "NaN" or
     "Infinity", respectively, will be output.

     </li><li> If <i>m</i> is zero then it is represented by the string
     <code>"0x0.0p0"</code>.

     </li><li> If <i>m</i> is a <code>double</code> value with a normalized
     representation then substrings are used to represent the significand and
     exponent fields.  The significand is represented by the characters
     <code>"0x1."</code> followed by the hexadecimal representation of the rest
     of the significand as a fraction.  The exponent is represented by
     <code>'p'</code> (<tt>'\u0070'</tt>) followed by a decimal string of the
     unbiased exponent as if produced by invoking <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Integer.html#toString%28int%29"><code>Integer.toString</code></a> on the exponent value.

     </li><li> If <i>m</i> is a <code>double</code> value with a subnormal
     representation then the significand is represented by the characters
     <code>'0x0.'</code> followed by the hexadecimal representation of the rest
     of the significand as a fraction.  The exponent is represented by
     <code>'p-1022'</code>.  Note that there must be at least one nonzero digit
     in a subnormal significand.

     </li></ul>

     <p> If the <code>'('</code> or <code>','</code> flags are given, then a <a href="http://docs.oracle.com/javase/7/docs/api/java/util/FormatFlagsConversionMismatchException.html" title="class in java.util"><code>FormatFlagsConversionMismatchException</code></a> will be thrown.

 </p></td></tr><tr><td valign="top"> <code>'A'</code>
     </td><td valign="top"> <tt>'\u0041'</tt>
     </td><td> The upper-case variant of <code>'a'</code>.  The entire string
     representing the number will be converted to upper case including the
     <code>'x'</code> (<tt>'\u0078'</tt>) and <code>'p'</code>
     (<tt>'\u0070'</tt> and all hexadecimal digits <code>'a'</code> -
     <code>'f'</code> (<tt>'\u0061'</tt> - <tt>'\u0066'</tt>).

 </td></tr></tbody></table>

 <p> All <a href="#intFlags">flags</a> defined for Byte, Short, Integer, and
 Long apply.

 </p><p> If the <code>'#'</code> flag is given, then the decimal separator will
 always be present.

 </p><p> If no <a name="floatdFlags">flags</a> are given the default formatting
 is as follows:

 </p><ul>

 <li> The output is right-justified within the <code>width</code>

 </li><li> Negative numbers begin with a <code>'-'</code>

 </li><li> Positive numbers and positive zero do not include a sign or extra
 leading space

 </li><li> No grouping separators are included

 </li><li> The decimal separator will only appear if a digit follows it

 </li></ul>

 <p> The <a name="floatDWidth">width</a> is the minimum number of characters
 to be written to the output.  This includes any signs, digits, grouping
 separators, decimal separators, exponential symbol, radix indicator,
 parentheses, and strings representing infinity and NaN as applicable.  If
 the length of the converted value is less than the width then the output
 will be padded by spaces (<tt>'\u0020'</tt>) until the total number of
 characters equals width.  The padding is on the left by default.  If the
 <code>'-'</code> flag is given then the padding will be on the right.  If width
 is not specified then there is no minimum.

 </p><p> If the <a name="floatDPrec">conversion</a> is <code>'e'</code>,
 <code>'E'</code> or <code>'f'</code>, then the precision is the number of digits
 after the decimal separator.  If the precision is not specified, then it is
 assumed to be <code>6</code>.

 </p><p> If the conversion is <code>'g'</code> or <code>'G'</code>, then the precision is
 the total number of significant digits in the resulting magnitude after
 rounding.  If the precision is not specified, then the default value is
 <code>6</code>.  If the precision is <code>0</code>, then it is taken to be
 <code>1</code>.

 </p><p> If the conversion is <code>'a'</code> or <code>'A'</code>, then the precision
 is the number of hexadecimal digits after the decimal separator.  If the
 precision is not provided, then all of the digits as returned by <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Double.html#toHexString%28double%29"><code>Double.toHexString(double)</code></a> will be output.

 </p><p><a name="dnbdec"><b> BigDecimal </b></a>

 </p><p> The following conversions may be applied <a href="http://docs.oracle.com/javase/7/docs/api/java/math/BigDecimal.html" title="class in java.math"><code>BigDecimal</code></a>.

 </p><table summary="floatConv" cellpadding="5">

 <tbody><tr><td valign="top"> <code>'e'</code>
     </td><td valign="top"> <tt>'\u0065'</tt>
     </td><td> Requires the output to be formatted using <a name="bscientific">computerized scientific notation</a>.  The <a href="#l10n%20algorithm">localization algorithm</a> is applied.

     <p> The formatting of the magnitude <i>m</i> depends upon its value.

     </p><p> If <i>m</i> is positive-zero or negative-zero, then the exponent
     will be <code>"+00"</code>.

     </p><p> Otherwise, the result is a string that represents the sign and
     magnitude (absolute value) of the argument.  The formatting of the sign
     is described in the <a href="#l10n%20algorithm">localization
     algorithm</a>. The formatting of the magnitude <i>m</i> depends upon its
     value.

     </p><p> Let <i>n</i> be the unique integer such that 10<sup><i>n</i></sup>
     &lt;= <i>m</i> &lt; 10<sup><i>n</i>+1</sup>; then let <i>a</i> be the
     mathematically exact quotient of <i>m</i> and 10<sup><i>n</i></sup> so
     that 1 &lt;= <i>a</i> &lt; 10. The magnitude is then represented as the
     integer part of <i>a</i>, as a single decimal digit, followed by the
     decimal separator followed by decimal digits representing the fractional
     part of <i>a</i>, followed by the exponent symbol <code>'e'</code>
     (<tt>'\u0065'</tt>), followed by the sign of the exponent, followed
     by a representation of <i>n</i> as a decimal integer, as produced by the
     method <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Long.html#toString%28long,%20int%29"><code>Long.toString(long, int)</code></a>, and zero-padded to include at
     least two digits.

     </p><p> The number of digits in the result for the fractional part of
     <i>m</i> or <i>a</i> is equal to the precision.  If the precision is not
     specified then the default value is <code>6</code>.  If the precision is
     less than the number of digits to the right of the decimal point then
     the value will be rounded using the
     <a href="http://docs.oracle.com/javase/7/docs/api/java/math/BigDecimal.html#ROUND_HALF_UP">round half up
     algorithm</a>.  Otherwise, zeros may be appended to reach the precision.
     For a canonical representation of the value, use <a href="http://docs.oracle.com/javase/7/docs/api/java/math/BigDecimal.html#toString%28%29"><code>BigDecimal.toString()</code></a>.

     </p><p> If the <code>','</code> flag is given, then an <a href="http://docs.oracle.com/javase/7/docs/api/java/util/FormatFlagsConversionMismatchException.html" title="class in java.util"><code>FormatFlagsConversionMismatchException</code></a> will be thrown.

 </p></td></tr><tr><td valign="top"> <code>'E'</code>
     </td><td valign="top"> <tt>'\u0045'</tt>
     </td><td> The upper-case variant of <code>'e'</code>.  The exponent symbol
     will be <code>'E'</code> (<tt>'\u0045'</tt>).

 </td></tr><tr><td valign="top"> <code>'g'</code>
     </td><td valign="top"> <tt>'\u0067'</tt>
     </td><td> Requires the output to be formatted in general scientific notation
     as described below. The <a href="#l10n%20algorithm">localization
     algorithm</a> is applied.

     <p> After rounding for the precision, the formatting of the resulting
     magnitude <i>m</i> depends on its value.

     </p><p> If <i>m</i> is greater than or equal to 10<sup>-4</sup> but less
     than 10<sup>precision</sup> then it is represented in <i><a href="#bdecimal">decimal format</a></i>.

     </p><p> If <i>m</i> is less than 10<sup>-4</sup> or greater than or equal to
     10<sup>precision</sup>, then it is represented in <i><a href="#bscientific">computerized scientific notation</a></i>.

     </p><p> The total number of significant digits in <i>m</i> is equal to the
     precision.  If the precision is not specified, then the default value is
     <code>6</code>.  If the precision is <code>0</code>, then it is taken to be
     <code>1</code>.

     </p><p> If the <code>'#'</code> flag is given then an <a href="http://docs.oracle.com/javase/7/docs/api/java/util/FormatFlagsConversionMismatchException.html" title="class in java.util"><code>FormatFlagsConversionMismatchException</code></a> will be thrown.

 </p></td></tr><tr><td valign="top"> <code>'G'</code>
     </td><td valign="top"> <tt>'\u0047'</tt>
     </td><td> The upper-case variant of <code>'g'</code>.

 </td></tr><tr><td valign="top"> <code>'f'</code>
     </td><td valign="top"> <tt>'\u0066'</tt>
     </td><td> Requires the output to be formatted using <a name="bdecimal">decimal
     format</a>.  The <a href="#l10n%20algorithm">localization algorithm</a> is
     applied.

     <p> The result is a string that represents the sign and magnitude
     (absolute value) of the argument.  The formatting of the sign is
     described in the <a href="#l10n%20algorithm">localization
     algorithm</a>. The formatting of the magnitude <i>m</i> depends upon its
     value.

     </p><p> The magnitude is formatted as the integer part of <i>m</i>, with no
     leading zeroes, followed by the decimal separator followed by one or
     more decimal digits representing the fractional part of <i>m</i>.

     </p><p> The number of digits in the result for the fractional part of
     <i>m</i> or <i>a</i> is equal to the precision. If the precision is not
     specified then the default value is <code>6</code>.  If the precision is
     less than the number of digits to the right of the decimal point
     then the value will be rounded using the
     <a href="http://docs.oracle.com/javase/7/docs/api/java/math/BigDecimal.html#ROUND_HALF_UP">round half up
     algorithm</a>.  Otherwise, zeros may be appended to reach the precision.
     For a canonical representation of the value, use <a href="http://docs.oracle.com/javase/7/docs/api/java/math/BigDecimal.html#toString%28%29"><code>BigDecimal.toString()</code></a>.

 </p></td></tr></tbody></table>

 <p> All <a href="#intFlags">flags</a> defined for Byte, Short, Integer, and
 Long apply.

 </p><p> If the <code>'#'</code> flag is given, then the decimal separator will
 always be present.

 </p><p> The <a href="#floatdFlags">default behavior</a> when no flags are
 given is the same as for Float and Double.

 </p><p> The specification of <a href="#floatDWidth">width</a> and <a href="#floatDPrec">precision</a> is the same as defined for Float and
 Double.

 </p><h4><a name="ddt">Date/Time</a></h4>

 <p> This conversion may be applied to <code>long</code>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Long.html" title="class in java.lang"><code>Long</code></a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Calendar.html" title="class in java.util"><code>Calendar</code></a>, and <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Date.html" title="class in java.util"><code>Date</code></a>.

 </p><table summary="DTConv" cellpadding="5">

 <tbody><tr><td valign="top"> <code>'t'</code>
     </td><td valign="top"> <tt>'\u0074'</tt>
     </td><td> Prefix for date and time conversion characters.
 </td></tr><tr><td valign="top"> <code>'T'</code>
     </td><td valign="top"> <tt>'\u0054'</tt>
     </td><td> The upper-case variant of <code>'t'</code>.

 </td></tr></tbody></table>

 <p> The following date and time conversion character suffixes are defined
 for the <code>'t'</code> and <code>'T'</code> conversions.  The types are similar to
 but not completely identical to those defined by GNU <code>date</code> and
 POSIX <code>strftime(3c)</code>.  Additional conversion types are provided to
 access Java-specific functionality (e.g. <code>'L'</code> for milliseconds
 within the second).

 </p><p> The following conversion characters are used for formatting times:

 </p><table summary="time" cellpadding="5">

 <tbody><tr><td valign="top"> <code>'H'</code>
     </td><td valign="top"> <tt>'\u0048'</tt>
     </td><td> Hour of the day for the 24-hour clock, formatted as two digits with
     a leading zero as necessary i.e. <code>00 - 23</code>. <code>00</code>
     corresponds to midnight.

 </td></tr><tr><td valign="top"><code>'I'</code>
     </td><td valign="top"> <tt>'\u0049'</tt>
     </td><td> Hour for the 12-hour clock, formatted as two digits with a leading
     zero as necessary, i.e.  <code>01 - 12</code>.  <code>01</code> corresponds to
     one o'clock (either morning or afternoon).

 </td></tr><tr><td valign="top"><code>'k'</code>
     </td><td valign="top"> <tt>'\u006b'</tt>
     </td><td> Hour of the day for the 24-hour clock, i.e. <code>0 - 23</code>.
     <code>0</code> corresponds to midnight.

 </td></tr><tr><td valign="top"><code>'l'</code>
     </td><td valign="top"> <tt>'\u006c'</tt>
     </td><td> Hour for the 12-hour clock, i.e. <code>1 - 12</code>.  <code>1</code>
     corresponds to one o'clock (either morning or afternoon).

 </td></tr><tr><td valign="top"><code>'M'</code>
     </td><td valign="top"> <tt>'\u004d'</tt>
     </td><td> Minute within the hour formatted as two digits with a leading zero
     as necessary, i.e.  <code>00 - 59</code>.

 </td></tr><tr><td valign="top"><code>'S'</code>
     </td><td valign="top"> <tt>'\u0053'</tt>
     </td><td> Seconds within the minute, formatted as two digits with a leading
     zero as necessary, i.e. <code>00 - 60</code> ("<code>60</code>" is a special
     value required to support leap seconds).

 </td></tr><tr><td valign="top"><code>'L'</code>
     </td><td valign="top"> <tt>'\u004c'</tt>
     </td><td> Millisecond within the second formatted as three digits with
     leading zeros as necessary, i.e. <code>000 - 999</code>.

 </td></tr><tr><td valign="top"><code>'N'</code>
     </td><td valign="top"> <tt>'\u004e'</tt>
     </td><td> Nanosecond within the second, formatted as nine digits with leading
     zeros as necessary, i.e. <code>000000000 - 999999999</code>.  The precision
     of this value is limited by the resolution of the underlying operating
     system or hardware.

 </td></tr><tr><td valign="top"><code>'p'</code>
     </td><td valign="top"> <tt>'\u0070'</tt>
     </td><td> Locale-specific <a href="http://docs.oracle.com/javase/7/docs/api/java/text/DateFormatSymbols.html#getAmPmStrings%28%29">morning or afternoon</a> marker
     in lower case, e.g."<code>am</code>" or "<code>pm</code>".  Use of the
     conversion prefix <code>'T'</code> forces this output to upper case.  (Note
     that <code>'p'</code> produces lower-case output.  This is different from
     GNU <code>date</code> and POSIX <code>strftime(3c)</code> which produce
     upper-case output.)

 </td></tr><tr><td valign="top"><code>'z'</code>
     </td><td valign="top"> <tt>'\u007a'</tt>
     </td><td> <a href="http://www.ietf.org/rfc/rfc0822.txt">RFC&nbsp;822</a>
     style numeric time zone offset from GMT, e.g. <code>-0800</code>.  This
     value will be adjusted as necessary for Daylight Saving Time.  For
     <code>long</code>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Long.html" title="class in java.lang"><code>Long</code></a>, and <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Date.html" title="class in java.util"><code>Date</code></a> the time zone used is
     the <a href="http://docs.oracle.com/javase/7/docs/api/java/util/TimeZone.html#getDefault%28%29">default time zone</a> for this
     instance of the Java virtual machine.

 </td></tr><tr><td valign="top"><code>'Z'</code>
     </td><td valign="top"> <tt>'\u005a'</tt>
     </td><td> A string representing the abbreviation for the time zone.  This
     value will be adjusted as necessary for Daylight Saving Time.  For
     <code>long</code>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Long.html" title="class in java.lang"><code>Long</code></a>, and <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Date.html" title="class in java.util"><code>Date</code></a> the time zone used is
     the <a href="http://docs.oracle.com/javase/7/docs/api/java/util/TimeZone.html#getDefault%28%29">default time zone</a> for this
     instance of the Java virtual machine.  The Formatter's locale will
     supersede the locale of the argument (if any).

 </td></tr><tr><td valign="top"><code>'s'</code>
     </td><td valign="top"> <tt>'\u0073'</tt>
     </td><td> Seconds since the beginning of the epoch starting at 1 January 1970
     <code>00:00:00</code> UTC, i.e. <code>Long.MIN_VALUE/1000</code> to
     <code>Long.MAX_VALUE/1000</code>.

 </td></tr><tr><td valign="top"><code>'Q'</code>
     </td><td valign="top"> <tt>'\u004f'</tt>
     </td><td> Milliseconds since the beginning of the epoch starting at 1 January
     1970 <code>00:00:00</code> UTC, i.e. <code>Long.MIN_VALUE</code> to
     <code>Long.MAX_VALUE</code>. The precision of this value is limited by
     the resolution of the underlying operating system or hardware.

 </td></tr></tbody></table>

 <p> The following conversion characters are used for formatting dates:

 </p><table summary="date" cellpadding="5">

 <tbody><tr><td valign="top"><code>'B'</code>
     </td><td valign="top"> <tt>'\u0042'</tt>
     </td><td> Locale-specific <a href="http://docs.oracle.com/javase/7/docs/api/java/text/DateFormatSymbols.html#getMonths%28%29">full month name</a>, e.g. <code>"January"</code>, <code>"February"</code>.

 </td></tr><tr><td valign="top"><code>'b'</code>
     </td><td valign="top"> <tt>'\u0062'</tt>
     </td><td> Locale-specific <a href="http://docs.oracle.com/javase/7/docs/api/java/text/DateFormatSymbols.html#getShortMonths%28%29">abbreviated month name</a>,
     e.g. <code>"Jan"</code>, <code>"Feb"</code>.

 </td></tr><tr><td valign="top"><code>'h'</code>
     </td><td valign="top"> <tt>'\u0068'</tt>
     </td><td> Same as <code>'b'</code>.

 </td></tr><tr><td valign="top"><code>'A'</code>
     </td><td valign="top"> <tt>'\u0041'</tt>
     </td><td> Locale-specific full name of the <a href="http://docs.oracle.com/javase/7/docs/api/java/text/DateFormatSymbols.html#getWeekdays%28%29">day of the week</a>,
     e.g. <code>"Sunday"</code>, <code>"Monday"</code>

 </td></tr><tr><td valign="top"><code>'a'</code>
     </td><td valign="top"> <tt>'\u0061'</tt>
     </td><td> Locale-specific short name of the <a href="http://docs.oracle.com/javase/7/docs/api/java/text/DateFormatSymbols.html#getShortWeekdays%28%29">day of the week</a>,
     e.g. <code>"Sun"</code>, <code>"Mon"</code>

 </td></tr><tr><td valign="top"><code>'C'</code>
     </td><td valign="top"> <tt>'\u0043'</tt>
     </td><td> Four-digit year divided by <code>100</code>, formatted as two digits
     with leading zero as necessary, i.e. <code>00 - 99</code>

 </td></tr><tr><td valign="top"><code>'Y'</code>
     </td><td valign="top"> <tt>'\u0059'</tt> </td><td> Year, formatted to at least
     four digits with leading zeros as necessary, e.g. <code>0092</code> equals
     <code>92</code> CE for the Gregorian calendar.

 </td></tr><tr><td valign="top"><code>'y'</code>
     </td><td valign="top"> <tt>'\u0079'</tt>
     </td><td> Last two digits of the year, formatted with leading zeros as
     necessary, i.e. <code>00 - 99</code>.

 </td></tr><tr><td valign="top"><code>'j'</code>
     </td><td valign="top"> <tt>'\u006a'</tt>
     </td><td> Day of year, formatted as three digits with leading zeros as
     necessary, e.g. <code>001 - 366</code> for the Gregorian calendar.
     <code>001</code> corresponds to the first day of the year.

 </td></tr><tr><td valign="top"><code>'m'</code>
     </td><td valign="top"> <tt>'\u006d'</tt>
     </td><td> Month, formatted as two digits with leading zeros as necessary,
     i.e. <code>01 - 13</code>, where "<code>01</code>" is the first month of the
     year and ("<code>13</code>" is a special value required to support lunar
     calendars).

 </td></tr><tr><td valign="top"><code>'d'</code>
     </td><td valign="top"> <tt>'\u0064'</tt>
     </td><td> Day of month, formatted as two digits with leading zeros as
     necessary, i.e. <code>01 - 31</code>, where "<code>01</code>" is the first day
     of the month.

 </td></tr><tr><td valign="top"><code>'e'</code>
     </td><td valign="top"> <tt>'\u0065'</tt>
     </td><td> Day of month, formatted as two digits, i.e. <code>1 - 31</code> where
     "<code>1</code>" is the first day of the month.

 </td></tr></tbody></table>

 <p> The following conversion characters are used for formatting common
 date/time compositions.

 </p><table summary="composites" cellpadding="5">

 <tbody><tr><td valign="top"><code>'R'</code>
     </td><td valign="top"> <tt>'\u0052'</tt>
     </td><td> Time formatted for the 24-hour clock as <code>"%tH:%tM"</code>

 </td></tr><tr><td valign="top"><code>'T'</code>
     </td><td valign="top"> <tt>'\u0054'</tt>
     </td><td> Time formatted for the 24-hour clock as <code>"%tH:%tM:%tS"</code>.

 </td></tr><tr><td valign="top"><code>'r'</code>
     </td><td valign="top"> <tt>'\u0072'</tt>
     </td><td> Time formatted for the 12-hour clock as <code>"%tI:%tM:%tS
     %Tp"</code>.  The location of the morning or afternoon marker
     (<code>'%Tp'</code>) may be locale-dependent.

 </td></tr><tr><td valign="top"><code>'D'</code>
     </td><td valign="top"> <tt>'\u0044'</tt>
     </td><td> Date formatted as <code>"%tm/%td/%ty"</code>.

 </td></tr><tr><td valign="top"><code>'F'</code>
     </td><td valign="top"> <tt>'\u0046'</tt>
     </td><td> <a href="http://www.w3.org/TR/NOTE-datetime">ISO&nbsp;8601</a>
     complete date formatted as <code>"%tY-%tm-%td"</code>.

 </td></tr><tr><td valign="top"><code>'c'</code>
     </td><td valign="top"> <tt>'\u0063'</tt>
     </td><td> Date and time formatted as <code>"%ta %tb %td %tT %tZ %tY"</code>,
     e.g. <code>"Sun Jul 20 16:17:00 EDT 1969"</code>.

 </td></tr></tbody></table>

 <p> The <code>'-'</code> flag defined for <a href="#dFlags">General
 conversions</a> applies.  If the <code>'#'</code> flag is given, then a <a href="http://docs.oracle.com/javase/7/docs/api/java/util/FormatFlagsConversionMismatchException.html" title="class in java.util"><code>FormatFlagsConversionMismatchException</code></a> will be thrown.

 </p><p> The <a name="dtWidth">width</a> is the minimum number of characters to
 be written to the output.  If the length of the converted value is less than
 the <code>width</code> then the output will be padded by spaces
 (<tt>'\u0020'</tt>) until the total number of characters equals width.
 The padding is on the left by default.  If the <code>'-'</code> flag is given
 then the padding will be on the right.  If width is not specified then there
 is no minimum.

 </p><p> The precision is not applicable.  If the precision is specified then an
 <a href="http://docs.oracle.com/javase/7/docs/api/java/util/IllegalFormatPrecisionException.html" title="class in java.util"><code>IllegalFormatPrecisionException</code></a> will be thrown.

 </p><h4><a name="dper">Percent</a></h4>

 <p> The conversion does not correspond to any argument.

 </p><table summary="DTConv" cellpadding="5">

 <tbody><tr><td valign="top"><code>'%'</code>
     </td><td> The result is a literal <code>'%'</code> (<tt>'\u0025'</tt>)

 <p> The <a name="dtWidth">width</a> is the minimum number of characters to
 be written to the output including the <code>'%'</code>.  If the length of the
 converted value is less than the <code>width</code> then the output will be
 padded by spaces (<tt>'\u0020'</tt>) until the total number of
 characters equals width.  The padding is on the left.  If width is not
 specified then just the <code>'%'</code> is output.

 </p><p> The <code>'-'</code> flag defined for <a href="#dFlags">General
 conversions</a> applies.  If any other flags are provided, then a
 <a href="http://docs.oracle.com/javase/7/docs/api/java/util/FormatFlagsConversionMismatchException.html" title="class in java.util"><code>FormatFlagsConversionMismatchException</code></a> will be thrown.

 </p><p> The precision is not applicable.  If the precision is specified an
 <a href="http://docs.oracle.com/javase/7/docs/api/java/util/IllegalFormatPrecisionException.html" title="class in java.util"><code>IllegalFormatPrecisionException</code></a> will be thrown.

 </p></td></tr></tbody></table>

 <h4><a name="dls">Line Separator</a></h4>

 <p> The conversion does not correspond to any argument.

 </p><table summary="DTConv" cellpadding="5">

 <tbody><tr><td valign="top"><code>'n'</code>
     </td><td> the platform-specific line separator as returned by <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/System.html#getProperty%28java.lang.String%29"><code>System.getProperty("line.separator")</code></a>.

 </td></tr></tbody></table>

 <p> Flags, width, and precision are not applicable.  If any are provided an
 <a href="http://docs.oracle.com/javase/7/docs/api/java/util/IllegalFormatFlagsException.html" title="class in java.util"><code>IllegalFormatFlagsException</code></a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/util/IllegalFormatWidthException.html" title="class in java.util"><code>IllegalFormatWidthException</code></a>,
 and <a href="http://docs.oracle.com/javase/7/docs/api/java/util/IllegalFormatPrecisionException.html" title="class in java.util"><code>IllegalFormatPrecisionException</code></a>, respectively will be thrown.

 </p><h4><a name="dpos">Argument Index</a></h4>

 <p> Format specifiers can reference arguments in three ways:

 </p><ul>

 <li> <i>Explicit indexing</i> is used when the format specifier contains an
 argument index.  The argument index is a decimal integer indicating the
 position of the argument in the argument list.  The first argument is
 referenced by "<code>1$</code>", the second by "<code>2$</code>", etc.  An argument
 may be referenced more than once.

 <p> For example:

 </p><blockquote><pre>   formatter.format("%4$s %3$s %2$s %1$s %4$s %3$s %2$s %1$s",
                    "a", "b", "c", "d")
   // -&gt; "d c b a d c b a"
 </pre></blockquote>

 </li><li> <i>Relative indexing</i> is used when the format specifier contains a
 <code>'&lt;'</code> (<tt>'\u003c'</tt>) flag which causes the argument for
 the previous format specifier to be re-used.  If there is no previous
 argument, then a <a href="http://docs.oracle.com/javase/7/docs/api/java/util/MissingFormatArgumentException.html" title="class in java.util"><code>MissingFormatArgumentException</code></a> is thrown.

 <blockquote><pre>    formatter.format("%s %s %&lt;s %&lt;s", "a", "b", "c", "d")
    // -&gt; "a b b b"
    // "c" and "d" are ignored because they are not referenced
 </pre></blockquote>

 </li><li> <i>Ordinary indexing</i> is used when the format specifier contains
 neither an argument index nor a <code>'&lt;'</code> flag.  Each format specifier
 which uses ordinary indexing is assigned a sequential implicit index into
 argument list which is independent of the indices used by explicit or
 relative indexing.

 <blockquote><pre>   formatter.format("%s %s %s %s", "a", "b", "c", "d")
   // -&gt; "a b c d"
 </pre></blockquote>

 </li></ul>

 <p> It is possible to have a format string which uses all forms of indexing,
 for example:

 </p><blockquote><pre>   formatter.format("%2$s %s %&lt;s %s", "a", "b", "c", "d")
   // -&gt; "b a a b"
   // "c" and "d" are ignored because they are not referenced
 </pre></blockquote>

 <p> The maximum number of arguments is limited by the maximum dimension of a
 Java array as defined by
 <cite>The Java™ Virtual Machine Specification</cite>.
 If the argument index is does not correspond to an
 available argument, then a <a href="http://docs.oracle.com/javase/7/docs/api/java/util/MissingFormatArgumentException.html" title="class in java.util"><code>MissingFormatArgumentException</code></a> is thrown.

 </p><p> If there are more arguments than format specifiers, the extra arguments
 are ignored.

 </p><p> Unless otherwise specified, passing a <code>null</code> argument to any
 method or constructor in this class will cause a <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/NullPointerException.html" title="class in java.lang"><code>NullPointerException</code></a> to be thrown.</p></div>
<dl><dt><span class="strong">Since:</span></dt>
  <dd>1.5</dd></dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== NESTED CLASS SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="nested_class_summary">
<!--   -->
</a>
<h3>Nested Class Summary</h3>
<table class="overviewSummary" summary="Nested Class Summary table, listing nested classes, and an explanation" border="0" cellpadding="3" cellspacing="0">
<caption><span>Nested Classes</span><span class="tabEnd">&nbsp;</span></caption>
<tbody><tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Class and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static class&nbsp;</code></td>
<td class="colLast"><code><strong><a href="http://docs.oracle.com/javase/7/docs/api/java/util/Formatter.BigDecimalLayoutForm.html" title="enum in java.util">Formatter.BigDecimalLayoutForm</a></strong></code>&nbsp;</td>
</tr>
</tbody></table>
</li>
</ul>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="overviewSummary" summary="Constructor Summary table, listing constructors, and an explanation" border="0" cellpadding="3" cellspacing="0">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tbody><tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="http://docs.oracle.com/javase/7/docs/api/java/util/Formatter.html#Formatter%28%29">Formatter</a></strong>()</code>
<div class="block">Constructs a new formatter.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colOne"><code><strong><a href="http://docs.oracle.com/javase/7/docs/api/java/util/Formatter.html#Formatter%28java.lang.Appendable%29">Formatter</a></strong>(<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Appendable.html" title="interface in java.lang">Appendable</a>&nbsp;a)</code>
<div class="block">Constructs a new formatter with the specified destination.</div>
</td>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="http://docs.oracle.com/javase/7/docs/api/java/util/Formatter.html#Formatter%28java.lang.Appendable,%20java.util.Locale%29">Formatter</a></strong>(<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Appendable.html" title="interface in java.lang">Appendable</a>&nbsp;a,
         <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Locale.html" title="class in java.util">Locale</a>&nbsp;l)</code>
<div class="block">Constructs a new formatter with the specified destination and locale.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colOne"><code><strong><a href="http://docs.oracle.com/javase/7/docs/api/java/util/Formatter.html#Formatter%28java.io.File%29">Formatter</a></strong>(<a href="http://docs.oracle.com/javase/7/docs/api/java/io/File.html" title="class in java.io">File</a>&nbsp;file)</code>
<div class="block">Constructs a new formatter with the specified file.</div>
</td>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="http://docs.oracle.com/javase/7/docs/api/java/util/Formatter.html#Formatter%28java.io.File,%20java.lang.String%29">Formatter</a></strong>(<a href="http://docs.oracle.com/javase/7/docs/api/java/io/File.html" title="class in java.io">File</a>&nbsp;file,
         <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class in java.lang">String</a>&nbsp;csn)</code>
<div class="block">Constructs a new formatter with the specified file and charset.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colOne"><code><strong><a href="http://docs.oracle.com/javase/7/docs/api/java/util/Formatter.html#Formatter%28java.io.File,%20java.lang.String,%20java.util.Locale%29">Formatter</a></strong>(<a href="http://docs.oracle.com/javase/7/docs/api/java/io/File.html" title="class in java.io">File</a>&nbsp;file,
         <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class in java.lang">String</a>&nbsp;csn,
         <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Locale.html" title="class in java.util">Locale</a>&nbsp;l)</code>
<div class="block">Constructs a new formatter with the specified file, charset, and
 locale.</div>
</td>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="http://docs.oracle.com/javase/7/docs/api/java/util/Formatter.html#Formatter%28java.util.Locale%29">Formatter</a></strong>(<a href="http://docs.oracle.com/javase/7/docs/api/java/util/Locale.html" title="class in java.util">Locale</a>&nbsp;l)</code>
<div class="block">Constructs a new formatter with the specified locale.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colOne"><code><strong><a href="http://docs.oracle.com/javase/7/docs/api/java/util/Formatter.html#Formatter%28java.io.OutputStream%29">Formatter</a></strong>(<a href="http://docs.oracle.com/javase/7/docs/api/java/io/OutputStream.html" title="class in java.io">OutputStream</a>&nbsp;os)</code>
<div class="block">Constructs a new formatter with the specified output stream.</div>
</td>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="http://docs.oracle.com/javase/7/docs/api/java/util/Formatter.html#Formatter%28java.io.OutputStream,%20java.lang.String%29">Formatter</a></strong>(<a href="http://docs.oracle.com/javase/7/docs/api/java/io/OutputStream.html" title="class in java.io">OutputStream</a>&nbsp;os,
         <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class in java.lang">String</a>&nbsp;csn)</code>
<div class="block">Constructs a new formatter with the specified output stream and
 charset.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colOne"><code><strong><a href="http://docs.oracle.com/javase/7/docs/api/java/util/Formatter.html#Formatter%28java.io.OutputStream,%20java.lang.String,%20java.util.Locale%29">Formatter</a></strong>(<a href="http://docs.oracle.com/javase/7/docs/api/java/io/OutputStream.html" title="class in java.io">OutputStream</a>&nbsp;os,
         <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class in java.lang">String</a>&nbsp;csn,
         <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Locale.html" title="class in java.util">Locale</a>&nbsp;l)</code>
<div class="block">Constructs a new formatter with the specified output stream, charset,
 and locale.</div>
</td>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="http://docs.oracle.com/javase/7/docs/api/java/util/Formatter.html#Formatter%28java.io.PrintStream%29">Formatter</a></strong>(<a href="http://docs.oracle.com/javase/7/docs/api/java/io/PrintStream.html" title="class in java.io">PrintStream</a>&nbsp;ps)</code>
<div class="block">Constructs a new formatter with the specified print stream.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colOne"><code><strong><a href="http://docs.oracle.com/javase/7/docs/api/java/util/Formatter.html#Formatter%28java.lang.String%29">Formatter</a></strong>(<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class in java.lang">String</a>&nbsp;fileName)</code>
<div class="block">Constructs a new formatter with the specified file name.</div>
</td>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="http://docs.oracle.com/javase/7/docs/api/java/util/Formatter.html#Formatter%28java.lang.String,%20java.lang.String%29">Formatter</a></strong>(<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class in java.lang">String</a>&nbsp;fileName,
         <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class in java.lang">String</a>&nbsp;csn)</code>
<div class="block">Constructs a new formatter with the specified file name and charset.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colOne"><code><strong><a href="http://docs.oracle.com/javase/7/docs/api/java/util/Formatter.html#Formatter%28java.lang.String,%20java.lang.String,%20java.util.Locale%29">Formatter</a></strong>(<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class in java.lang">String</a>&nbsp;fileName,
         <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class in java.lang">String</a>&nbsp;csn,
         <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Locale.html" title="class in java.util">Locale</a>&nbsp;l)</code>
<div class="block">Constructs a new formatter with the specified file name, charset, and
 locale.</div>
</td>
</tr>
</tbody></table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method_summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="overviewSummary" summary="Method Summary table, listing methods, and an explanation" border="0" cellpadding="3" cellspacing="0">
<caption><span>Methods</span><span class="tabEnd">&nbsp;</span></caption>
<tbody><tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="http://docs.oracle.com/javase/7/docs/api/java/util/Formatter.html#close%28%29">close</a></strong>()</code>
<div class="block">Closes this formatter.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="http://docs.oracle.com/javase/7/docs/api/java/util/Formatter.html#flush%28%29">flush</a></strong>()</code>
<div class="block">Flushes this formatter.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code><a href="http://docs.oracle.com/javase/7/docs/api/java/util/Formatter.html" title="class in java.util">Formatter</a></code></td>
<td class="colLast"><code><strong><a href="http://docs.oracle.com/javase/7/docs/api/java/util/Formatter.html#format%28java.util.Locale,%20java.lang.String,%20java.lang.Object...%29">format</a></strong>(<a href="http://docs.oracle.com/javase/7/docs/api/java/util/Locale.html" title="class in java.util">Locale</a>&nbsp;l,
      <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class in java.lang">String</a>&nbsp;format,
      <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html" title="class in java.lang">Object</a>...&nbsp;args)</code>
<div class="block">Writes a formatted string to this object's destination using the
 specified locale, format string, and arguments.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code><a href="http://docs.oracle.com/javase/7/docs/api/java/util/Formatter.html" title="class in java.util">Formatter</a></code></td>
<td class="colLast"><code><strong><a href="http://docs.oracle.com/javase/7/docs/api/java/util/Formatter.html#format%28java.lang.String,%20java.lang.Object...%29">format</a></strong>(<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class in java.lang">String</a>&nbsp;format,
      <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html" title="class in java.lang">Object</a>...&nbsp;args)</code>
<div class="block">Writes a formatted string to this object's destination using the
 specified format string and arguments.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code><a href="http://docs.oracle.com/javase/7/docs/api/java/io/IOException.html" title="class in java.io">IOException</a></code></td>
<td class="colLast"><code><strong><a href="http://docs.oracle.com/javase/7/docs/api/java/util/Formatter.html#ioException%28%29">ioException</a></strong>()</code>
<div class="block">Returns the <code>IOException</code> last thrown by this formatter's <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Appendable.html" title="interface in java.lang"><code>Appendable</code></a>.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code><a href="http://docs.oracle.com/javase/7/docs/api/java/util/Locale.html" title="class in java.util">Locale</a></code></td>
<td class="colLast"><code><strong><a href="http://docs.oracle.com/javase/7/docs/api/java/util/Formatter.html#locale%28%29">locale</a></strong>()</code>
<div class="block">Returns the locale set by the construction of this formatter.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code><a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Appendable.html" title="interface in java.lang">Appendable</a></code></td>
<td class="colLast"><code><strong><a href="http://docs.oracle.com/javase/7/docs/api/java/util/Formatter.html#out%28%29">out</a></strong>()</code>
<div class="block">Returns the destination for the output.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code><a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class in java.lang">String</a></code></td>
<td class="colLast"><code><strong><a href="http://docs.oracle.com/javase/7/docs/api/java/util/Formatter.html#toString%28%29">toString</a></strong>()</code>
<div class="block">Returns the result of invoking <code>toString()</code> on the destination
 for the output.</div>
</td>
</tr>
</tbody></table>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html" title="class in java.lang">Object</a></h3>
<code><a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#clone%28%29">clone</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#equals%28java.lang.Object%29">equals</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#finalize%28%29">finalize</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#getClass%28%29">getClass</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#hashCode%28%29">hashCode</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#notify%28%29">notify</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#notifyAll%28%29">notifyAll</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#wait%28%29">wait</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#wait%28long%29">wait</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#wait%28long,%20int%29">wait</a></code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="Formatter()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>Formatter</h4>
<pre>public&nbsp;Formatter()</pre>
<div class="block">Constructs a new formatter.

 <p> The destination of the formatted output is a <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/StringBuilder.html" title="class in java.lang"><code>StringBuilder</code></a>
 which may be retrieved by invoking <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Formatter.html#out%28%29"><code>out()</code></a> and whose
 current content may be converted into a string by invoking <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Formatter.html#toString%28%29"><code>toString()</code></a>.  The locale used is the <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Locale.html#getDefault%28%29">default locale</a> for this instance of the Java
 virtual machine.</p></div>
</li>
</ul>
<a name="Formatter(java.lang.Appendable)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>Formatter</h4>
<pre>public&nbsp;Formatter(<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Appendable.html" title="interface in java.lang">Appendable</a>&nbsp;a)</pre>
<div class="block">Constructs a new formatter with the specified destination.

 <p> The locale used is the <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Locale.html#getDefault%28%29">default
 locale</a> for this instance of the Java virtual machine.</p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>a</code> - Destination for the formatted output.  If <code>a</code> is
         <code>null</code> then a <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/StringBuilder.html" title="class in java.lang"><code>StringBuilder</code></a> will be created.</dd></dl>
</li>
</ul>
<a name="Formatter(java.util.Locale)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>Formatter</h4>
<pre>public&nbsp;Formatter(<a href="http://docs.oracle.com/javase/7/docs/api/java/util/Locale.html" title="class in java.util">Locale</a>&nbsp;l)</pre>
<div class="block">Constructs a new formatter with the specified locale.

 <p> The destination of the formatted output is a <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/StringBuilder.html" title="class in java.lang"><code>StringBuilder</code></a>
 which may be retrieved by invoking <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Formatter.html#out%28%29"><code>out()</code></a> and whose current
 content may be converted into a string by invoking <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Formatter.html#toString%28%29"><code>toString()</code></a>.</p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>l</code> - The <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Locale.html" title="class in java.util">locale</a> to apply during
         formatting.  If <code>l</code> is <code>null</code> then no localization
         is applied.</dd></dl>
</li>
</ul>
<a name="Formatter(java.lang.Appendable, java.util.Locale)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>Formatter</h4>
<pre>public&nbsp;Formatter(<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Appendable.html" title="interface in java.lang">Appendable</a>&nbsp;a,
         <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Locale.html" title="class in java.util">Locale</a>&nbsp;l)</pre>
<div class="block">Constructs a new formatter with the specified destination and locale.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>a</code> - Destination for the formatted output.  If <code>a</code> is
         <code>null</code> then a <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/StringBuilder.html" title="class in java.lang"><code>StringBuilder</code></a> will be created.</dd><dd><code>l</code> - The <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Locale.html" title="class in java.util">locale</a> to apply during
         formatting.  If <code>l</code> is <code>null</code> then no localization
         is applied.</dd></dl>
</li>
</ul>
<a name="Formatter(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>Formatter</h4>
<pre>public&nbsp;Formatter(<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class in java.lang">String</a>&nbsp;fileName)
          throws <a href="http://docs.oracle.com/javase/7/docs/api/java/io/FileNotFoundException.html" title="class in java.io">FileNotFoundException</a></pre>
<div class="block">Constructs a new formatter with the specified file name.

 <p> The charset used is the <a href="http://docs.oracle.com/javase/7/docs/api/java/nio/charset/Charset.html#defaultCharset%28%29">default charset</a> for this
 instance of the Java virtual machine.

 </p><p> The locale used is the <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Locale.html#getDefault%28%29">default
 locale</a> for this instance of the Java virtual machine.</p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>fileName</code> - The name of the file to use as the destination of this
         formatter.  If the file exists then it will be truncated to
         zero size; otherwise, a new file will be created.  The output
         will be written to the file and is buffered.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/java/lang/SecurityException.html" title="class in java.lang">SecurityException</a></code> - If a security manager is present and <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/SecurityManager.html#checkWrite%28java.io.FileDescriptor%29"><code>checkWrite(fileName)</code></a> denies write
          access to the file</dd>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/java/io/FileNotFoundException.html" title="class in java.io">FileNotFoundException</a></code> - If the given file name does not denote an existing, writable
          regular file and a new regular file of that name cannot be
          created, or if some other error occurs while opening or
          creating the file</dd></dl>
</li>
</ul>
<a name="Formatter(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>Formatter</h4>
<pre>public&nbsp;Formatter(<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class in java.lang">String</a>&nbsp;fileName,
         <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class in java.lang">String</a>&nbsp;csn)
          throws <a href="http://docs.oracle.com/javase/7/docs/api/java/io/FileNotFoundException.html" title="class in java.io">FileNotFoundException</a>,
                 <a href="http://docs.oracle.com/javase/7/docs/api/java/io/UnsupportedEncodingException.html" title="class in java.io">UnsupportedEncodingException</a></pre>
<div class="block">Constructs a new formatter with the specified file name and charset.

 <p> The locale used is the <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Locale.html#getDefault%28%29">default
 locale</a> for this instance of the Java virtual machine.</p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>fileName</code> - The name of the file to use as the destination of this
         formatter.  If the file exists then it will be truncated to
         zero size; otherwise, a new file will be created.  The output
         will be written to the file and is buffered.</dd><dd><code>csn</code> - The name of a supported <a href="http://docs.oracle.com/javase/7/docs/api/java/nio/charset/Charset.html" title="class in java.nio.charset">charset</a></dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/java/io/FileNotFoundException.html" title="class in java.io">FileNotFoundException</a></code> - If the given file name does not denote an existing, writable
          regular file and a new regular file of that name cannot be
          created, or if some other error occurs while opening or
          creating the file</dd>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/java/lang/SecurityException.html" title="class in java.lang">SecurityException</a></code> - If a security manager is present and <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/SecurityManager.html#checkWrite%28java.io.FileDescriptor%29"><code>checkWrite(fileName)</code></a> denies write
          access to the file</dd>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/java/io/UnsupportedEncodingException.html" title="class in java.io">UnsupportedEncodingException</a></code> - If the named charset is not supported</dd></dl>
</li>
</ul>
<a name="Formatter(java.lang.String, java.lang.String, java.util.Locale)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>Formatter</h4>
<pre>public&nbsp;Formatter(<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class in java.lang">String</a>&nbsp;fileName,
         <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class in java.lang">String</a>&nbsp;csn,
         <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Locale.html" title="class in java.util">Locale</a>&nbsp;l)
          throws <a href="http://docs.oracle.com/javase/7/docs/api/java/io/FileNotFoundException.html" title="class in java.io">FileNotFoundException</a>,
                 <a href="http://docs.oracle.com/javase/7/docs/api/java/io/UnsupportedEncodingException.html" title="class in java.io">UnsupportedEncodingException</a></pre>
<div class="block">Constructs a new formatter with the specified file name, charset, and
 locale.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>fileName</code> - The name of the file to use as the destination of this
         formatter.  If the file exists then it will be truncated to
         zero size; otherwise, a new file will be created.  The output
         will be written to the file and is buffered.</dd><dd><code>csn</code> - The name of a supported <a href="http://docs.oracle.com/javase/7/docs/api/java/nio/charset/Charset.html" title="class in java.nio.charset">charset</a></dd><dd><code>l</code> - The <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Locale.html" title="class in java.util">locale</a> to apply during
         formatting.  If <code>l</code> is <code>null</code> then no localization
         is applied.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/java/io/FileNotFoundException.html" title="class in java.io">FileNotFoundException</a></code> - If the given file name does not denote an existing, writable
          regular file and a new regular file of that name cannot be
          created, or if some other error occurs while opening or
          creating the file</dd>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/java/lang/SecurityException.html" title="class in java.lang">SecurityException</a></code> - If a security manager is present and <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/SecurityManager.html#checkWrite%28java.io.FileDescriptor%29"><code>checkWrite(fileName)</code></a> denies write
          access to the file</dd>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/java/io/UnsupportedEncodingException.html" title="class in java.io">UnsupportedEncodingException</a></code> - If the named charset is not supported</dd></dl>
</li>
</ul>
<a name="Formatter(java.io.File)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>Formatter</h4>
<pre>public&nbsp;Formatter(<a href="http://docs.oracle.com/javase/7/docs/api/java/io/File.html" title="class in java.io">File</a>&nbsp;file)
          throws <a href="http://docs.oracle.com/javase/7/docs/api/java/io/FileNotFoundException.html" title="class in java.io">FileNotFoundException</a></pre>
<div class="block">Constructs a new formatter with the specified file.

 <p> The charset used is the <a href="http://docs.oracle.com/javase/7/docs/api/java/nio/charset/Charset.html#defaultCharset%28%29">default charset</a> for this
 instance of the Java virtual machine.

 </p><p> The locale used is the <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Locale.html#getDefault%28%29">default
 locale</a> for this instance of the Java virtual machine.</p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>file</code> - The file to use as the destination of this formatter.  If the
         file exists then it will be truncated to zero size; otherwise,
         a new file will be created.  The output will be written to the
         file and is buffered.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/java/lang/SecurityException.html" title="class in java.lang">SecurityException</a></code> - If a security manager is present and <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/SecurityManager.html#checkWrite%28java.io.FileDescriptor%29"><code>checkWrite(file.getPath())</code></a> denies
          write access to the file</dd>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/java/io/FileNotFoundException.html" title="class in java.io">FileNotFoundException</a></code> - If the given file object does not denote an existing, writable
          regular file and a new regular file of that name cannot be
          created, or if some other error occurs while opening or
          creating the file</dd></dl>
</li>
</ul>
<a name="Formatter(java.io.File, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>Formatter</h4>
<pre>public&nbsp;Formatter(<a href="http://docs.oracle.com/javase/7/docs/api/java/io/File.html" title="class in java.io">File</a>&nbsp;file,
         <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class in java.lang">String</a>&nbsp;csn)
          throws <a href="http://docs.oracle.com/javase/7/docs/api/java/io/FileNotFoundException.html" title="class in java.io">FileNotFoundException</a>,
                 <a href="http://docs.oracle.com/javase/7/docs/api/java/io/UnsupportedEncodingException.html" title="class in java.io">UnsupportedEncodingException</a></pre>
<div class="block">Constructs a new formatter with the specified file and charset.

 <p> The locale used is the <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Locale.html#getDefault%28%29">default
 locale</a> for this instance of the Java virtual machine.</p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>file</code> - The file to use as the destination of this formatter.  If the
         file exists then it will be truncated to zero size; otherwise,
         a new file will be created.  The output will be written to the
         file and is buffered.</dd><dd><code>csn</code> - The name of a supported <a href="http://docs.oracle.com/javase/7/docs/api/java/nio/charset/Charset.html" title="class in java.nio.charset">charset</a></dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/java/io/FileNotFoundException.html" title="class in java.io">FileNotFoundException</a></code> - If the given file object does not denote an existing, writable
          regular file and a new regular file of that name cannot be
          created, or if some other error occurs while opening or
          creating the file</dd>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/java/lang/SecurityException.html" title="class in java.lang">SecurityException</a></code> - If a security manager is present and <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/SecurityManager.html#checkWrite%28java.io.FileDescriptor%29"><code>checkWrite(file.getPath())</code></a> denies
          write access to the file</dd>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/java/io/UnsupportedEncodingException.html" title="class in java.io">UnsupportedEncodingException</a></code> - If the named charset is not supported</dd></dl>
</li>
</ul>
<a name="Formatter(java.io.File, java.lang.String, java.util.Locale)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>Formatter</h4>
<pre>public&nbsp;Formatter(<a href="http://docs.oracle.com/javase/7/docs/api/java/io/File.html" title="class in java.io">File</a>&nbsp;file,
         <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class in java.lang">String</a>&nbsp;csn,
         <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Locale.html" title="class in java.util">Locale</a>&nbsp;l)
          throws <a href="http://docs.oracle.com/javase/7/docs/api/java/io/FileNotFoundException.html" title="class in java.io">FileNotFoundException</a>,
                 <a href="http://docs.oracle.com/javase/7/docs/api/java/io/UnsupportedEncodingException.html" title="class in java.io">UnsupportedEncodingException</a></pre>
<div class="block">Constructs a new formatter with the specified file, charset, and
 locale.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>file</code> - The file to use as the destination of this formatter.  If the
         file exists then it will be truncated to zero size; otherwise,
         a new file will be created.  The output will be written to the
         file and is buffered.</dd><dd><code>csn</code> - The name of a supported <a href="http://docs.oracle.com/javase/7/docs/api/java/nio/charset/Charset.html" title="class in java.nio.charset">charset</a></dd><dd><code>l</code> - The <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Locale.html" title="class in java.util">locale</a> to apply during
         formatting.  If <code>l</code> is <code>null</code> then no localization
         is applied.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/java/io/FileNotFoundException.html" title="class in java.io">FileNotFoundException</a></code> - If the given file object does not denote an existing, writable
          regular file and a new regular file of that name cannot be
          created, or if some other error occurs while opening or
          creating the file</dd>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/java/lang/SecurityException.html" title="class in java.lang">SecurityException</a></code> - If a security manager is present and <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/SecurityManager.html#checkWrite%28java.io.FileDescriptor%29"><code>checkWrite(file.getPath())</code></a> denies
          write access to the file</dd>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/java/io/UnsupportedEncodingException.html" title="class in java.io">UnsupportedEncodingException</a></code> - If the named charset is not supported</dd></dl>
</li>
</ul>
<a name="Formatter(java.io.PrintStream)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>Formatter</h4>
<pre>public&nbsp;Formatter(<a href="http://docs.oracle.com/javase/7/docs/api/java/io/PrintStream.html" title="class in java.io">PrintStream</a>&nbsp;ps)</pre>
<div class="block">Constructs a new formatter with the specified print stream.

 <p> The locale used is the <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Locale.html#getDefault%28%29">default
 locale</a> for this instance of the Java virtual machine.

 </p><p> Characters are written to the given <a href="http://docs.oracle.com/javase/7/docs/api/java/io/PrintStream.html" title="class in java.io"><code>PrintStream</code></a> object and are therefore encoded using that object's
 charset.</p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>ps</code> - The stream to use as the destination of this formatter.</dd></dl>
</li>
</ul>
<a name="Formatter(java.io.OutputStream)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>Formatter</h4>
<pre>public&nbsp;Formatter(<a href="http://docs.oracle.com/javase/7/docs/api/java/io/OutputStream.html" title="class in java.io">OutputStream</a>&nbsp;os)</pre>
<div class="block">Constructs a new formatter with the specified output stream.

 <p> The charset used is the <a href="http://docs.oracle.com/javase/7/docs/api/java/nio/charset/Charset.html#defaultCharset%28%29">default charset</a> for this
 instance of the Java virtual machine.

 </p><p> The locale used is the <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Locale.html#getDefault%28%29">default
 locale</a> for this instance of the Java virtual machine.</p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>os</code> - The output stream to use as the destination of this formatter.
         The output will be buffered.</dd></dl>
</li>
</ul>
<a name="Formatter(java.io.OutputStream, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>Formatter</h4>
<pre>public&nbsp;Formatter(<a href="http://docs.oracle.com/javase/7/docs/api/java/io/OutputStream.html" title="class in java.io">OutputStream</a>&nbsp;os,
         <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class in java.lang">String</a>&nbsp;csn)
          throws <a href="http://docs.oracle.com/javase/7/docs/api/java/io/UnsupportedEncodingException.html" title="class in java.io">UnsupportedEncodingException</a></pre>
<div class="block">Constructs a new formatter with the specified output stream and
 charset.

 <p> The locale used is the <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Locale.html#getDefault%28%29">default
 locale</a> for this instance of the Java virtual machine.</p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>os</code> - The output stream to use as the destination of this formatter.
         The output will be buffered.</dd><dd><code>csn</code> - The name of a supported <a href="http://docs.oracle.com/javase/7/docs/api/java/nio/charset/Charset.html" title="class in java.nio.charset">charset</a></dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/java/io/UnsupportedEncodingException.html" title="class in java.io">UnsupportedEncodingException</a></code> - If the named charset is not supported</dd></dl>
</li>
</ul>
<a name="Formatter(java.io.OutputStream, java.lang.String, java.util.Locale)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>Formatter</h4>
<pre>public&nbsp;Formatter(<a href="http://docs.oracle.com/javase/7/docs/api/java/io/OutputStream.html" title="class in java.io">OutputStream</a>&nbsp;os,
         <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class in java.lang">String</a>&nbsp;csn,
         <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Locale.html" title="class in java.util">Locale</a>&nbsp;l)
          throws <a href="http://docs.oracle.com/javase/7/docs/api/java/io/UnsupportedEncodingException.html" title="class in java.io">UnsupportedEncodingException</a></pre>
<div class="block">Constructs a new formatter with the specified output stream, charset,
 and locale.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>os</code> - The output stream to use as the destination of this formatter.
         The output will be buffered.</dd><dd><code>csn</code> - The name of a supported <a href="http://docs.oracle.com/javase/7/docs/api/java/nio/charset/Charset.html" title="class in java.nio.charset">charset</a></dd><dd><code>l</code> - The <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Locale.html" title="class in java.util">locale</a> to apply during
         formatting.  If <code>l</code> is <code>null</code> then no localization
         is applied.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/java/io/UnsupportedEncodingException.html" title="class in java.io">UnsupportedEncodingException</a></code> - If the named charset is not supported</dd></dl>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method_detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="locale()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>locale</h4>
<pre>public&nbsp;<a href="http://docs.oracle.com/javase/7/docs/api/java/util/Locale.html" title="class in java.util">Locale</a>&nbsp;locale()</pre>
<div class="block">Returns the locale set by the construction of this formatter.

 <p> The <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Formatter.html#format%28java.util.Locale,%20java.lang.String,%20java.lang.Object...%29"><code>format</code></a> method
 for this object which has a locale argument does not change this value.</p></div>
<dl><dt><span class="strong">Returns:</span></dt><dd><code>null</code> if no localization is applied, otherwise a
          locale</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/java/util/FormatterClosedException.html" title="class in java.util">FormatterClosedException</a></code> - If this formatter has been closed by invoking its <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Formatter.html#close%28%29"><code>close()</code></a> method</dd></dl>
</li>
</ul>
<a name="out()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>out</h4>
<pre>public&nbsp;<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Appendable.html" title="interface in java.lang">Appendable</a>&nbsp;out()</pre>
<div class="block">Returns the destination for the output.</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>The destination for the output</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/java/util/FormatterClosedException.html" title="class in java.util">FormatterClosedException</a></code> - If this formatter has been closed by invoking its <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Formatter.html#close%28%29"><code>close()</code></a> method</dd></dl>
</li>
</ul>
<a name="toString()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>toString</h4>
<pre>public&nbsp;<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class in java.lang">String</a>&nbsp;toString()</pre>
<div class="block">Returns the result of invoking <code>toString()</code> on the destination
 for the output.  For example, the following code formats text into a
 <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/StringBuilder.html" title="class in java.lang"><code>StringBuilder</code></a> then retrieves the resultant string:

 <blockquote><pre>   Formatter f = new Formatter();
   f.format("Last reboot at %tc", lastRebootDate);
   String s = f.toString();
   // -&gt; s == "Last reboot at Sat Jan 01 00:00:00 PST 2000"
 </pre></blockquote>

 <p> An invocation of this method behaves in exactly the same way as the
 invocation

 </p><pre>     out().toString() </pre>

 <p> Depending on the specification of <code>toString</code> for the <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Appendable.html" title="interface in java.lang"><code>Appendable</code></a>, the returned string may or may not contain the characters
 written to the destination.  For instance, buffers typically return
 their contents in <code>toString()</code>, but streams cannot since the
 data is discarded.</p></div>
<dl>
<dt><strong>Overrides:</strong></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#toString%28%29">toString</a></code>&nbsp;in class&nbsp;<code><a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html" title="class in java.lang">Object</a></code></dd>
<dt><span class="strong">Returns:</span></dt><dd>The result of invoking <code>toString()</code> on the destination
          for the output</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/java/util/FormatterClosedException.html" title="class in java.util">FormatterClosedException</a></code> - If this formatter has been closed by invoking its <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Formatter.html#close%28%29"><code>close()</code></a> method</dd></dl>
</li>
</ul>
<a name="flush()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>flush</h4>
<pre>public&nbsp;void&nbsp;flush()</pre>
<div class="block">Flushes this formatter.  If the destination implements the <a href="http://docs.oracle.com/javase/7/docs/api/java/io/Flushable.html" title="interface in java.io"><code>Flushable</code></a> interface, its <code>flush</code> method will be invoked.

 <p> Flushing a formatter writes any buffered output in the destination
 to the underlying stream.</p></div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/java/io/Flushable.html#flush%28%29">flush</a></code>&nbsp;in interface&nbsp;<code><a href="http://docs.oracle.com/javase/7/docs/api/java/io/Flushable.html" title="interface in java.io">Flushable</a></code></dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/java/util/FormatterClosedException.html" title="class in java.util">FormatterClosedException</a></code> - If this formatter has been closed by invoking its <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Formatter.html#close%28%29"><code>close()</code></a> method</dd></dl>
</li>
</ul>
<a name="close()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>close</h4>
<pre>public&nbsp;void&nbsp;close()</pre>
<div class="block">Closes this formatter.  If the destination implements the <a href="http://docs.oracle.com/javase/7/docs/api/java/io/Closeable.html" title="interface in java.io"><code>Closeable</code></a> interface, its <code>close</code> method will be invoked.

 <p> Closing a formatter allows it to release resources it may be holding
 (such as open files).  If the formatter is already closed, then invoking
 this method has no effect.

 </p><p> Attempting to invoke any methods except <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Formatter.html#ioException%28%29"><code>ioException()</code></a> in
 this formatter after it has been closed will result in a <a href="http://docs.oracle.com/javase/7/docs/api/java/util/FormatterClosedException.html" title="class in java.util"><code>FormatterClosedException</code></a>.</p></div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/java/io/Closeable.html#close%28%29">close</a></code>&nbsp;in interface&nbsp;<code><a href="http://docs.oracle.com/javase/7/docs/api/java/io/Closeable.html" title="interface in java.io">Closeable</a></code></dd>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/java/lang/AutoCloseable.html#close%28%29">close</a></code>&nbsp;in interface&nbsp;<code><a href="http://docs.oracle.com/javase/7/docs/api/java/lang/AutoCloseable.html" title="interface in java.lang">AutoCloseable</a></code></dd>
</dl>
</li>
</ul>
<a name="ioException()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>ioException</h4>
<pre>public&nbsp;<a href="http://docs.oracle.com/javase/7/docs/api/java/io/IOException.html" title="class in java.io">IOException</a>&nbsp;ioException()</pre>
<div class="block">Returns the <code>IOException</code> last thrown by this formatter's <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Appendable.html" title="interface in java.lang"><code>Appendable</code></a>.

 <p> If the destination's <code>append()</code> method never throws
 <code>IOException</code>, then this method will always return <code>null</code>.</p></div>
<dl><dt><span class="strong">Returns:</span></dt><dd>The last exception thrown by the Appendable or <code>null</code> if
          no such exception exists.</dd></dl>
</li>
</ul>
<a name="format(java.lang.String, java.lang.Object...)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>format</h4>
<pre>public&nbsp;<a href="http://docs.oracle.com/javase/7/docs/api/java/util/Formatter.html" title="class in java.util">Formatter</a>&nbsp;format(<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class in java.lang">String</a>&nbsp;format,
               <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html" title="class in java.lang">Object</a>...&nbsp;args)</pre>
<div class="block">Writes a formatted string to this object's destination using the
 specified format string and arguments.  The locale used is the one
 defined during the construction of this formatter.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>format</code> - A format string as described in <a href="#syntax">Format string
         syntax</a>.</dd><dd><code>args</code> - Arguments referenced by the format specifiers in the format
         string.  If there are more arguments than format specifiers, the
         extra arguments are ignored.  The maximum number of arguments is
         limited by the maximum dimension of a Java array as defined by
         <cite>The Java™ Virtual Machine Specification</cite>.</dd>
<dt><span class="strong">Returns:</span></dt><dd>This formatter</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/java/util/IllegalFormatException.html" title="class in java.util">IllegalFormatException</a></code> - If a format string contains an illegal syntax, a format
          specifier that is incompatible with the given arguments,
          insufficient arguments given the format string, or other
          illegal conditions.  For specification of all possible
          formatting errors, see the <a href="#detail">Details</a>
          section of the formatter class specification.</dd>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/java/util/FormatterClosedException.html" title="class in java.util">FormatterClosedException</a></code> - If this formatter has been closed by invoking its <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Formatter.html#close%28%29"><code>close()</code></a> method</dd></dl>
</li>
</ul>
<a name="format(java.util.Locale, java.lang.String, java.lang.Object...)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>format</h4>
<pre>public&nbsp;<a href="http://docs.oracle.com/javase/7/docs/api/java/util/Formatter.html" title="class in java.util">Formatter</a>&nbsp;format(<a href="http://docs.oracle.com/javase/7/docs/api/java/util/Locale.html" title="class in java.util">Locale</a>&nbsp;l,
               <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html" title="class in java.lang">String</a>&nbsp;format,
               <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html" title="class in java.lang">Object</a>...&nbsp;args)</pre>
<div class="block">Writes a formatted string to this object's destination using the
 specified locale, format string, and arguments.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>l</code> - The <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Locale.html" title="class in java.util">locale</a> to apply during
         formatting.  If <code>l</code> is <code>null</code> then no localization
         is applied.  This does not change this object's locale that was
         set during construction.</dd><dd><code>format</code> - A format string as described in <a href="#syntax">Format string
         syntax</a></dd><dd><code>args</code> - Arguments referenced by the format specifiers in the format
         string.  If there are more arguments than format specifiers, the
         extra arguments are ignored.  The maximum number of arguments is
         limited by the maximum dimension of a Java array as defined by
         <cite>The Java™ Virtual Machine Specification</cite>.</dd>
<dt><span class="strong">Returns:</span></dt><dd>This formatter</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/java/util/IllegalFormatException.html" title="class in java.util">IllegalFormatException</a></code> - If a format string contains an illegal syntax, a format
          specifier that is incompatible with the given arguments,
          insufficient arguments given the format string, or other
          illegal conditions.  For specification of all possible
          formatting errors, see the <a href="#detail">Details</a>
          section of the formatter class specification.</dd>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/java/util/FormatterClosedException.html" title="class in java.util">FormatterClosedException</a></code> - If this formatter has been closed by invoking its <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Formatter.html#close%28%29"><code>close()</code></a> method</dd></dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar_bottom">
<!--   -->
</a><a href="#skip-navbar_bottom" title="Skip navigation links"></a><a name="navbar_bottom_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="http://docs.oracle.com/javase/7/docs/api/overview-summary.html">Overview</a></li>
<li><a href="http://docs.oracle.com/javase/7/docs/api/java/util/package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="http://docs.oracle.com/javase/7/docs/api/java/util/class-use/Formatter.html">Use</a></li>
<li><a href="http://docs.oracle.com/javase/7/docs/api/java/util/package-tree.html">Tree</a></li>
<li><a href="http://docs.oracle.com/javase/7/docs/api/deprecated-list.html">Deprecated</a></li>
<li><a href="http://docs.oracle.com/javase/7/docs/api/index-files/index-1.html">Index</a></li>
<li><a href="http://docs.oracle.com/javase/7/docs/api/help-doc.html">Help</a></li>
</ul>
<div class="aboutLanguage"><em><strong>Java™&nbsp;Platform<br>Standard&nbsp;Ed.&nbsp;7</strong></em></div>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="http://docs.oracle.com/javase/7/docs/api/java/util/FormattableFlags.html" title="class in java.util"><span class="strong">Prev Class</span></a></li>
<li><a href="http://docs.oracle.com/javase/7/docs/api/java/util/Formatter.BigDecimalLayoutForm.html" title="enum in java.util"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="http://docs.oracle.com/javase/7/docs/api/index.html?java/util/Formatter.html" target="_top">Frames</a></li>
<li><a href="http://docs.oracle.com/javase/7/docs/api/java/util/Formatter.html" target="_top">No Frames</a></li>
</ul>
<ul style="display: block;" class="navList" id="allclasses_navbar_bottom">
<li><a href="http://docs.oracle.com/javase/7/docs/api/allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li><a href="#nested_class_summary">Nested</a>&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
<p class="legalCopy"><small><font size="-1"> <a href="http://bugreport.sun.com/bugreport/">Submit a bug or feature</a> <br>For further API reference and developer documentation, see <a href="http://docs.oracle.com/javase/7/docs/index.html" target="_blank">Java SE Documentation</a>.
 That documentation contains more detailed, developer-targeted 
descriptions, with conceptual overviews, definitions of terms, 
workarounds, and working code examples.<br> <a href="http://docs.oracle.com/javase/7/docs/legal/cpyr.html">Copyright</a> © 1993, 2014, Oracle and/or its affiliates.  All rights reserved. </font></small></p>
<!-- Start SiteCatalyst code   -->
<script type="text/JavaScript" src="Formatter%20%28Java%20Platform%20SE%207%20%29_files/s_code_download.js"></script>
<script type="text/JavaScript" src="Formatter%20%28Java%20Platform%20SE%207%20%29_files/s_code.js"></script>

<!-- ********** DO NOT ALTER ANYTHING BELOW THIS LINE ! *********** -->
<!--  Below code will send the info to Omniture server -->
<script type="text/javascript">var s_code=s.t();if(s_code)document.write(s_code)</script>

<!-- End SiteCatalyst code -->
<noscript>
<p>Scripting on this page tracks web page traffic, but does not change the content in any way.</p>
</noscript>


</body></html>